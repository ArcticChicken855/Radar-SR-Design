{
 "name": "BGT24ATR22_100_RTL54",
 "asic": "",
 "date": "13.07.2022",
 "units": [
  {
   "name": "BGT24ATR22",
   "registers": [
    {
     "name": "TRIG0_CONF",
     "bitwidth": 16,
     "address": 1,
     "desc": "Trigger 0 configuration register",
     "info": "",
     "reset": [
      {
       "value": 9249,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TRIG0 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pad"
        },
        {
         "value": 1,
         "desc": "Enables pad"
        }
       ]
      },
      {
       "name": "DIR",
       "width": 1,
       "offset": 1,
       "desc": "Direction of TRIG0 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Set direction \\\"input\\\""
        },
        {
         "value": 1,
         "desc": "Set direction \\\"output\\\""
        }
       ]
      },
      {
       "name": "INV",
       "width": 1,
       "offset": 2,
       "desc": "Invert signal of TRIG0 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Does not inverted signal"
        },
        {
         "value": 1,
         "desc": "Inverts signal"
        }
       ]
      },
      {
       "name": "PRG",
       "width": 1,
       "offset": 3,
       "desc": "Programmable driver strength of TRIG0 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strong driver"
        },
        {
         "value": 1,
         "desc": "Normal driver"
        }
       ]
      },
      {
       "name": "PU_EN",
       "width": 1,
       "offset": 4,
       "desc": "Enable pull-up of TRIG0 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-up"
        },
        {
         "value": 1,
         "desc": "Enables pull-up"
        }
       ]
      },
      {
       "name": "PD_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable pull-down of TRIG0 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-down"
        },
        {
         "value": 1,
         "desc": "Enables pull-down"
        }
       ]
      },
      {
       "name": "FORCE_EN",
       "width": 1,
       "offset": 6,
       "desc": "Force value of TRIG0 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables forcing the pin"
        },
        {
         "value": 1,
         "desc": "Enables forcing the pin"
        }
       ]
      },
      {
       "name": "FORCE_VAL",
       "width": 1,
       "offset": 7,
       "desc": "TRIG0 pin value if pin is forced",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Force pin to low"
        },
        {
         "value": 1,
         "desc": "Force pin to high"
        }
       ]
      },
      {
       "name": "MAP",
       "width": 3,
       "offset": 8,
       "desc": "Map the TRIG 0 pad to one of 8 internal triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Map TRIG 0 to trigger 0"
        },
        {
         "value": 1,
         "desc": "Map TRIG 0 to trigger 1"
        },
        {
         "value": 2,
         "desc": "Map TRIG 0 to trigger 2"
        },
        {
         "value": 3,
         "desc": "Map TRIG 0 to trigger 3"
        },
        {
         "value": 4,
         "desc": "Map TRIG 0 to trigger 4"
        },
        {
         "value": 5,
         "desc": "Map TRIG 0 to trigger 5"
        },
        {
         "value": 6,
         "desc": "Map TRIG 0 to trigger 6"
        },
        {
         "value": 7,
         "desc": "Map TRIG 0 to trigger 7"
        }
       ]
      },
      {
       "name": "STRETCH",
       "width": 3,
       "offset": 11,
       "desc": "Stretching of outgoing triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "stretch by 0 * 32 T_clk_sys"
        },
        {
         "value": 1,
         "desc": "stretch by 1 * 32 T_clk_sys"
        },
        {
         "value": 2,
         "desc": "stretch by 2 * 32 T_clk_sys"
        },
        {
         "value": 3,
         "desc": "stretch by 3 * 32 T_clk_sys"
        },
        {
         "value": 4,
         "desc": "stretch by 4 * 32 T_clk_sys"
        },
        {
         "value": 5,
         "desc": "stretch by 5 * 32 T_clk_sys"
        },
        {
         "value": 6,
         "desc": "stretch by 6 * 32 T_clk_sys"
        },
        {
         "value": 7,
         "desc": "stretch by 7 * 32 T_clk_sys"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 14,
       "desc": "Reserved",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_TRIG0_CONF",
     "custom": ""
    },
    {
     "name": "TRIG1_CONF",
     "bitwidth": 16,
     "address": 2,
     "desc": "Trigger 1 configuration register",
     "info": "",
     "reset": [
      {
       "value": 11553,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TRIG1 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pad"
        },
        {
         "value": 1,
         "desc": "Enables pad"
        }
       ]
      },
      {
       "name": "DIR",
       "width": 1,
       "offset": 1,
       "desc": "Direction of TRIG1 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Set direction \\\"input\\\""
        },
        {
         "value": 1,
         "desc": "Set direction \\\"output\\\""
        }
       ]
      },
      {
       "name": "INV",
       "width": 1,
       "offset": 2,
       "desc": "Invert signal of TRIG1 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Does not inverted signal"
        },
        {
         "value": 1,
         "desc": "Inverts signal"
        }
       ]
      },
      {
       "name": "PRG",
       "width": 1,
       "offset": 3,
       "desc": "Programmable driver strength of TRIG1 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strong driver"
        },
        {
         "value": 1,
         "desc": "Normal driver"
        }
       ]
      },
      {
       "name": "PU_EN",
       "width": 1,
       "offset": 4,
       "desc": "Enable pull-up of TRIG1 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-up"
        },
        {
         "value": 1,
         "desc": "Enables pull-up"
        }
       ]
      },
      {
       "name": "PD_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable pull-down of TRIG1 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-down"
        },
        {
         "value": 1,
         "desc": "Enables pull-down"
        }
       ]
      },
      {
       "name": "FORCE_EN",
       "width": 1,
       "offset": 6,
       "desc": "Force value of TRIG1 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables forcing the pin"
        },
        {
         "value": 1,
         "desc": "Enables forcing the pin"
        }
       ]
      },
      {
       "name": "FORCE_VAL",
       "width": 1,
       "offset": 7,
       "desc": "TRIG1 pin value if pin is forced",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Force pin to low"
        },
        {
         "value": 1,
         "desc": "Force pin to high"
        }
       ]
      },
      {
       "name": "MAP",
       "width": 3,
       "offset": 8,
       "desc": "Map the TRIG 1 pad to one of 8 internal triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Map TRIG 1 to trigger 0"
        },
        {
         "value": 1,
         "desc": "Map TRIG 1 to trigger 1"
        },
        {
         "value": 2,
         "desc": "Map TRIG 1 to trigger 2"
        },
        {
         "value": 3,
         "desc": "Map TRIG 1 to trigger 3"
        },
        {
         "value": 4,
         "desc": "Map TRIG 1 to trigger 4"
        },
        {
         "value": 5,
         "desc": "Map TRIG 1 to trigger 5"
        },
        {
         "value": 6,
         "desc": "Map TRIG 1 to trigger 6"
        },
        {
         "value": 7,
         "desc": "Map TRIG 1 to trigger 7"
        }
       ]
      },
      {
       "name": "STRETCH",
       "width": 3,
       "offset": 11,
       "desc": "Stretching of outgoing triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "stretch by 0 * 32 T_clk_sys"
        },
        {
         "value": 1,
         "desc": "stretch by 1 * 32 T_clk_sys"
        },
        {
         "value": 2,
         "desc": "stretch by 2 * 32 T_clk_sys"
        },
        {
         "value": 3,
         "desc": "stretch by 3 * 32 T_clk_sys"
        },
        {
         "value": 4,
         "desc": "stretch by 4 * 32 T_clk_sys"
        },
        {
         "value": 5,
         "desc": "stretch by 5 * 32 T_clk_sys"
        },
        {
         "value": 6,
         "desc": "stretch by 6 * 32 T_clk_sys"
        },
        {
         "value": 7,
         "desc": "stretch by 7 * 32 T_clk_sys"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 14,
       "desc": "Reserved",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_TRIG1_CONF",
     "custom": ""
    },
    {
     "name": "TRIG2_CONF",
     "bitwidth": 16,
     "address": 3,
     "desc": "Trigger 2 configuration register",
     "info": "",
     "reset": [
      {
       "value": 13857,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TRIG2 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pad"
        },
        {
         "value": 1,
         "desc": "Enables pad"
        }
       ]
      },
      {
       "name": "DIR",
       "width": 1,
       "offset": 1,
       "desc": "Direction of TRIG2 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Set direction \\\"input\\\""
        },
        {
         "value": 1,
         "desc": "Set direction \\\"output\\\""
        }
       ]
      },
      {
       "name": "INV",
       "width": 1,
       "offset": 2,
       "desc": "Invert signal of TRIG2 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Does not inverted signal"
        },
        {
         "value": 1,
         "desc": "Inverts signal"
        }
       ]
      },
      {
       "name": "PRG",
       "width": 1,
       "offset": 3,
       "desc": "Programmable driver strength of TRIG2 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strong driver"
        },
        {
         "value": 1,
         "desc": "Normal driver"
        }
       ]
      },
      {
       "name": "PU_EN",
       "width": 1,
       "offset": 4,
       "desc": "Enable pull-up of TRIG2 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-up"
        },
        {
         "value": 1,
         "desc": "Enables pull-up"
        }
       ]
      },
      {
       "name": "PD_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable pull-down of TRIG2 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-down"
        },
        {
         "value": 1,
         "desc": "Enables pull-down"
        }
       ]
      },
      {
       "name": "FORCE_EN",
       "width": 1,
       "offset": 6,
       "desc": "Force value of TRIG2 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables forcing the pin"
        },
        {
         "value": 1,
         "desc": "Enables forcing the pin"
        }
       ]
      },
      {
       "name": "FORCE_VAL",
       "width": 1,
       "offset": 7,
       "desc": "TRIG2 pin value if pin is forced",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Force pin to low"
        },
        {
         "value": 1,
         "desc": "Force pin to high"
        }
       ]
      },
      {
       "name": "MAP",
       "width": 3,
       "offset": 8,
       "desc": "Map the TRIG 2 pad to one of 8 internal triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Map TRIG 2 to trigger 0"
        },
        {
         "value": 1,
         "desc": "Map TRIG 2 to trigger 1"
        },
        {
         "value": 2,
         "desc": "Map TRIG 2 to trigger 2"
        },
        {
         "value": 3,
         "desc": "Map TRIG 2 to trigger 3"
        },
        {
         "value": 4,
         "desc": "Map TRIG 2 to trigger 4"
        },
        {
         "value": 5,
         "desc": "Map TRIG 2 to trigger 5"
        },
        {
         "value": 6,
         "desc": "Map TRIG 2 to trigger 6"
        },
        {
         "value": 7,
         "desc": "Map TRIG 2 to trigger 7"
        }
       ]
      },
      {
       "name": "STRETCH",
       "width": 3,
       "offset": 11,
       "desc": "Stretching of outgoing triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "stretch by 0 * 32 T_clk_sys"
        },
        {
         "value": 1,
         "desc": "stretch by 1 * 32 T_clk_sys"
        },
        {
         "value": 2,
         "desc": "stretch by 2 * 32 T_clk_sys"
        },
        {
         "value": 3,
         "desc": "stretch by 3 * 32 T_clk_sys"
        },
        {
         "value": 4,
         "desc": "stretch by 4 * 32 T_clk_sys"
        },
        {
         "value": 5,
         "desc": "stretch by 5 * 32 T_clk_sys"
        },
        {
         "value": 6,
         "desc": "stretch by 6 * 32 T_clk_sys"
        },
        {
         "value": 7,
         "desc": "stretch by 7 * 32 T_clk_sys"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 14,
       "desc": "Reserved",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_TRIG2_CONF",
     "custom": ""
    },
    {
     "name": "TRIG3_CONF",
     "bitwidth": 16,
     "address": 4,
     "desc": "Trigger 3 configuration register",
     "info": "",
     "reset": [
      {
       "value": 16161,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TRIG3 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pad"
        },
        {
         "value": 1,
         "desc": "Enables pad"
        }
       ]
      },
      {
       "name": "DIR",
       "width": 1,
       "offset": 1,
       "desc": "Direction of TRIG3 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Set direction \\\"input\\\""
        },
        {
         "value": 1,
         "desc": "Set direction \\\"output\\\""
        }
       ]
      },
      {
       "name": "INV",
       "width": 1,
       "offset": 2,
       "desc": "Invert signal of TRIG3 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Does not inverted signal"
        },
        {
         "value": 1,
         "desc": "Inverts signal"
        }
       ]
      },
      {
       "name": "PRG",
       "width": 1,
       "offset": 3,
       "desc": "Programmable driver strength of TRIG3 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strong driver"
        },
        {
         "value": 1,
         "desc": "Normal driver"
        }
       ]
      },
      {
       "name": "PU_EN",
       "width": 1,
       "offset": 4,
       "desc": "Enable pull-up of TRIG3 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-up"
        },
        {
         "value": 1,
         "desc": "Enables pull-up"
        }
       ]
      },
      {
       "name": "PD_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable pull-down of TRIG3 pad",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables pull-down"
        },
        {
         "value": 1,
         "desc": "Enables pull-down"
        }
       ]
      },
      {
       "name": "FORCE_EN",
       "width": 1,
       "offset": 6,
       "desc": "Force value of TRIG3 pin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables forcing the pin"
        },
        {
         "value": 1,
         "desc": "Enables forcing the pin"
        }
       ]
      },
      {
       "name": "FORCE_VAL",
       "width": 1,
       "offset": 7,
       "desc": "TRIG3 pin value if pin is forced",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Force pin to low"
        },
        {
         "value": 1,
         "desc": "Force pin to high"
        }
       ]
      },
      {
       "name": "MAP",
       "width": 3,
       "offset": 8,
       "desc": "Map the TRIG 3 pad to one of 8 internal triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Map TRIG 3 to trigger 0"
        },
        {
         "value": 1,
         "desc": "Map TRIG 3 to trigger 1"
        },
        {
         "value": 2,
         "desc": "Map TRIG 3 to trigger 2"
        },
        {
         "value": 3,
         "desc": "Map TRIG 3 to trigger 3"
        },
        {
         "value": 4,
         "desc": "Map TRIG 3 to trigger 4"
        },
        {
         "value": 5,
         "desc": "Map TRIG 3 to trigger 5"
        },
        {
         "value": 6,
         "desc": "Map TRIG 3 to trigger 6"
        },
        {
         "value": 7,
         "desc": "Map TRIG 3 to trigger 7"
        }
       ]
      },
      {
       "name": "STRETCH",
       "width": 3,
       "offset": 11,
       "desc": "Stretching of outgoing triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "stretch by 0 * 32 T_clk_sys"
        },
        {
         "value": 1,
         "desc": "stretch by 1 * 32 T_clk_sys"
        },
        {
         "value": 2,
         "desc": "stretch by 2 * 32 T_clk_sys"
        },
        {
         "value": 3,
         "desc": "stretch by 3 * 32 T_clk_sys"
        },
        {
         "value": 4,
         "desc": "stretch by 4 * 32 T_clk_sys"
        },
        {
         "value": 5,
         "desc": "stretch by 5 * 32 T_clk_sys"
        },
        {
         "value": 6,
         "desc": "stretch by 6 * 32 T_clk_sys"
        },
        {
         "value": 7,
         "desc": "stretch by 7 * 32 T_clk_sys"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 14,
       "desc": "Reserved",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_TRIG3_CONF",
     "custom": ""
    },
    {
     "name": "IR_STATUS",
     "bitwidth": 16,
     "address": 16,
     "desc": "Interrupt status register",
     "info": "<html >\\n    <body><div>Interrupt bit mask for the different bit numbers:</div><div>0<sub>D</sub> ... Output trigger 0</div><div>1<sub>D</sub> ... Output trigger 1</div><div>2<sub>D</sub> ... Output trigger 2</div><div>3<sub>D</sub> ... Output trigger 3</div><div>4<sub>D</sub> ... Output trigger 4</div><div>5<sub>D</sub> ... Output trigger 5</div><div>6<sub>D</sub> ... Output trigger 6</div><div>7<sub>D</sub> ... Output trigger 7</div><div>8<sub>D</sub> ... Target detected in pulse configuration 0</div><div>9<sub>D</sub> ... Target detected in pulse configuration 1</div><div>10<sub>D</sub> ... Target detected in pulse configuration 2</div><div>11<sub>D</sub> ... Target detected in pulse configuration 3</div><div>12<sub>D</sub> ... Sequencer error</div><div>13<sub>D</sub> ... Environment check failed &#xe2;&#x20ac;&#x201c; sensor 1</div><div>14<sub>D</sub> ... Environment check failed &#xe2;&#x20ac;&#x201c; sensor 2</div><div>15<sub>D</sub> ... Reserved</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "STAT0",
       "width": 1,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT1",
       "width": 1,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT2",
       "width": 1,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT3",
       "width": 1,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT4",
       "width": 1,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT5",
       "width": 1,
       "offset": 5,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT6",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT7",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT8",
       "width": 1,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT9",
       "width": 1,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT10",
       "width": 1,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT11",
       "width": 1,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT12",
       "width": 1,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT13",
       "width": 1,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT14",
       "width": 1,
       "offset": 14,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      },
      {
       "name": "STAT15",
       "width": 1,
       "offset": 15,
       "desc": "",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Interrupt not triggered"
        },
        {
         "value": 1,
         "desc": "Interrupt triggered"
        }
       ]
      }
     ],
     "parent": "IO",
     "concat_name": "IO_IR_STATUS",
     "custom": ""
    },
    {
     "name": "IR_EN",
     "bitwidth": 16,
     "address": 17,
     "desc": "Interrupt enable register",
     "info": "<html >\\n    <body><div>Interrupt bit mask for the different bit numbers:</div><div>0<sub>D</sub> ... Output trigger 0</div><div>1<sub>D</sub> ... Output trigger 1</div><div>2<sub>D</sub> ... Output trigger 2</div><div>3<sub>D</sub> ... Output trigger 3</div><div>4<sub>D</sub> ... Output trigger 4</div><div>5<sub>D</sub> ... Output trigger 5</div><div>6<sub>D</sub> ... Output trigger 6</div><div>7<sub>D</sub> ... Output trigger 7</div><div>8<sub>D</sub> ... Target detected in pulse configuration 0</div><div>9<sub>D</sub> ... Target detected in pulse configuration 1</div><div>10<sub>D</sub> ... Target detected in pulse configuration 2</div><div>11<sub>D</sub> ... Target detected in pulse configuration 3</div><div>12<sub>D</sub> ... Sequencer error</div><div>13<sub>D</sub> ... Environment check failed &#xe2;&#x20ac;&#x201c; sensor 1</div><div>14<sub>D</sub> ... Environment check failed &#xe2;&#x20ac;&#x201c; sensor 2</div><div>15<sub>D</sub> ... Reserved</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN0",
       "width": 1,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN1",
       "width": 1,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN2",
       "width": 1,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN3",
       "width": 1,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN4",
       "width": 1,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN5",
       "width": 1,
       "offset": 5,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN6",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN7",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN8",
       "width": 1,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN9",
       "width": 1,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN10",
       "width": 1,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN11",
       "width": 1,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN12",
       "width": 1,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN13",
       "width": 1,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN14",
       "width": 1,
       "offset": 14,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      },
      {
       "name": "EN15",
       "width": 1,
       "offset": 15,
       "desc": "",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt"
        },
        {
         "value": 1,
         "desc": "Enables interrupt"
        }
       ]
      }
     ],
     "parent": "IO",
     "concat_name": "IO_IR_EN",
     "custom": ""
    },
    {
     "name": "IR_CLEAR",
     "bitwidth": 16,
     "address": 18,
     "desc": "Interrupt clear register",
     "info": "<html >\\n    <body><div>Interrupt bit mask for the different bit numbers:</div><div>0<sub>D</sub> ... Output trigger 0</div><div>1<sub>D</sub> ... Output trigger 1</div><div>2<sub>D</sub> ... Output trigger 2</div><div>3<sub>D</sub> ... Output trigger 3</div><div>4<sub>D</sub> ... Output trigger 4</div><div>5<sub>D</sub> ... Output trigger 5</div><div>6<sub>D</sub> ... Output trigger 6</div><div>7<sub>D</sub> ... Output trigger 7</div><div>8<sub>D</sub> ... Target detected in pulse configuration 0</div><div>9<sub>D</sub> ... Target detected in pulse configuration 1</div><div>10<sub>D</sub> ... Target detected in pulse configuration 2</div><div>11<sub>D</sub> ... Target detected in pulse configuration 3</div><div>12<sub>D</sub> ... Sequencer error</div><div>13<sub>D</sub> ... Environment check failed &#xe2;&#x20ac;&#x201c; sensor 1</div><div>14<sub>D</sub> ... Environment check failed &#xe2;&#x20ac;&#x201c; sensor 2</div><div>15<sub>D</sub> ... Reserved</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "CLR0",
       "width": 1,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR1",
       "width": 1,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR2",
       "width": 1,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR3",
       "width": 1,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR4",
       "width": 1,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR5",
       "width": 1,
       "offset": 5,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR6",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR7",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR8",
       "width": 1,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR9",
       "width": 1,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR10",
       "width": 1,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR11",
       "width": 1,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR12",
       "width": 1,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR13",
       "width": 1,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR14",
       "width": 1,
       "offset": 14,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      },
      {
       "name": "CLR15",
       "width": 1,
       "offset": 15,
       "desc": "",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "Keeps interrupt state"
        },
        {
         "value": 1,
         "desc": "Clears interrupt state"
        }
       ]
      }
     ],
     "parent": "IO",
     "concat_name": "IO_IR_CLEAR",
     "custom": ""
    },
    {
     "name": "IR_TRIG_MAP",
     "bitwidth": 16,
     "address": 19,
     "desc": "Interrupt router trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the interrupt trigger.",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0 for interrupt router"
        },
        {
         "value": 1,
         "desc": "Output trigger 1 for interrupt router"
        },
        {
         "value": 2,
         "desc": "Output trigger 2 for interrupt router"
        },
        {
         "value": 3,
         "desc": "Output trigger 3 for interrupt router"
        },
        {
         "value": 4,
         "desc": "Output trigger 4 for interrupt router"
        },
        {
         "value": 5,
         "desc": "Output trigger 5 for interrupt router"
        },
        {
         "value": 6,
         "desc": "Output trigger 6 for interrupt router"
        },
        {
         "value": 7,
         "desc": "Output trigger 7 for interrupt router"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable for the interrupt trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables interrupt trigger map"
        },
        {
         "value": 1,
         "desc": "Enables interrupt trigger map"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_IR_TRIG_MAP",
     "custom": ""
    },
    {
     "name": "CLK_CONF",
     "bitwidth": 16,
     "address": 32,
     "desc": "Clock configuration register",
     "info": "<html >\\n <head>\\n  <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n   .style9 {\\n       background-color: #ff00ff;\\n       color: #ffff33\\n   }\\n   .style8 {\\n       background-color: #66ffcc;\\n       color: #990099\\n   }\\n   .style7 {\\n       background-color: #ccffcc;\\n       color: #0066cc\\n   }\\n   .style6 {\\n       background-color: #ffffcc;\\n       color: #009900\\n   }\\n   .style11 {\\n       background-color: #ccffcc;\\n       color: #000066\\n   }\\n   .style5 {\\n       background-color: #99ff99;\\n       color: #cc0033\\n   }\\n   .style10 {\\n       background-color: #00cccc;\\n       color: #99ff99\\n   }\\n   .style4 {\\n       background-color: #ccffff;\\n       color: #cc0033\\n   }\\n   .style3 {\\n       background-color: teal;\\n       color: #0000dd\\n   }\\n   .style2 {\\n       background-color: aqua;\\n       color: #0000cc\\n   }\\n   .style1 {\\n       background-color: silver;\\n       color: blue\\n   }\\n   .style0 {\\n       background-color: #ffffcc;\\n       color: #000099\\n   }-->  </style>\\n </head>\\n <body><p style=\\\"margin-top:0\\\">This register should be written at the very end of an I2C transmission. As it switches the clocks it is required to wait for &gt;= 20 sys-clk cycles before the next I2C-access starts.</p></body>\\n</html>",
     "reset": [
      {
       "value": 68,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RSVD_1_0",
       "width": 2,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "I2C_CLK_DIV",
       "width": 2,
       "offset": 2,
       "desc": "Clock divider of I2C clock",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "I2C clock is equal to global clock"
        },
        {
         "value": 1,
         "desc": "Divides global clock by 2 for I2C clock"
        },
        {
         "value": 2,
         "desc": "Divides global clock by 3 for I2C clock"
        },
        {
         "value": 3,
         "desc": "Divides global clock by 4 for I2C clock"
        }
       ]
      },
      {
       "name": "SYS_CLK_SEL",
       "width": 1,
       "offset": 4,
       "desc": "System clock source selection",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Reference clock"
        },
        {
         "value": 1,
         "desc": "Internal RC oscillator clock"
        }
       ]
      },
      {
       "name": "REF_CLK_SEL",
       "width": 1,
       "offset": 5,
       "desc": "Reference clock source selection",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Quartz circuit"
        },
        {
         "value": 1,
         "desc": "TRIG0 pin"
        }
       ]
      },
      {
       "name": "REF_CLK_AUTO",
       "width": 1,
       "offset": 6,
       "desc": "Automatic selection of reference clock",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Manual selection of reference clock"
        },
        {
         "value": 1,
         "desc": "Automatic selection of reference clock"
        }
       ]
      },
      {
       "name": "SYS_CLK_TO_I2C",
       "width": 1,
       "offset": 7,
       "desc": "SYS_CLK same frequency as I2C",
       "info": "<html >\\n    <head>\\n        <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n            .style9 {\\n                background-color: #ff00ff;\\n                color: #ffff33\\n            }\\n            .style8 {\\n                background-color: #66ffcc;\\n                color: #990099\\n            }\\n            .style7 {\\n                background-color: #ccffcc;\\n                color: #0066cc\\n            }\\n            .style6 {\\n                background-color: #ffffcc;\\n                color: #009900\\n            }\\n            .style11 {\\n                background-color: #ccffcc;\\n                color: #000066\\n            }\\n            .style5 {\\n                background-color: #99ff99;\\n                color: #cc0033\\n            }\\n            .style10 {\\n                background-color: #00cccc;\\n                color: #99ff99\\n            }\\n            .style4 {\\n                background-color: #ccffff;\\n                color: #cc0033\\n            }\\n            .style3 {\\n                background-color: teal;\\n                color: #0000dd\\n            }\\n            .style2 {\\n                background-color: aqua;\\n                color: #0000cc\\n            }\\n            .style1 {\\n                background-color: silver;\\n                color: blue\\n            }\\n            .style0 {\\n                background-color: #ffffcc;\\n                color: #000099\\n            }-->  </style>\\n    </head>\\n    <body><p style=\\\"margin-top:0\\\">Instead of bypassing the divider completely the SYS_CLK is set to same frequency as I2C clock while I2C transfer is ongoing</p></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Bypass SYS_CLK divider during I2C transfer"
        },
        {
         "value": 1,
         "desc": "Set SYS_CLK divider to I2C_CLK divider"
        }
       ]
      },
      {
       "name": "SYS_CLK_DIV",
       "width": 4,
       "offset": 8,
       "desc": "Clock divider of global clock",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Full speed global clock (divider bypassed)"
        },
        {
         "value": 1,
         "desc": "Divides global clock by 2"
        },
        {
         "value": 2,
         "desc": "Divides global clock by 3"
        },
        {
         "value": 3,
         "desc": "Divides global clock by 4"
        },
        {
         "value": 4,
         "desc": "Divides global clock by 5"
        },
        {
         "value": 5,
         "desc": "Divides global clock by 6"
        },
        {
         "value": 6,
         "desc": "Divides global clock by 7"
        },
        {
         "value": 7,
         "desc": "Divides global clock by 8"
        },
        {
         "value": 8,
         "desc": "Divides global clock by 9"
        },
        {
         "value": 9,
         "desc": "Divides global clock by 10"
        },
        {
         "value": 10,
         "desc": "Divides global clock by 11"
        },
        {
         "value": 11,
         "desc": "Divides global clock by 12"
        },
        {
         "value": 12,
         "desc": "Divides global clock by 13"
        },
        {
         "value": 13,
         "desc": "Divides global clock by 14"
        },
        {
         "value": 14,
         "desc": "Divides global clock by 15"
        },
        {
         "value": 15,
         "desc": "Divides global clock by 16"
        }
       ]
      },
      {
       "name": "SYS_CLK_DIV_FLEX",
       "width": 1,
       "offset": 12,
       "desc": "Enable automatic adjustment of global clock based on sequencer, i2c and drdp",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Keep SYS_CLK divider at configured setting"
        },
        {
         "value": 1,
         "desc": "Allow automatic change of SYS_CLK divider "
        }
       ]
      },
      {
       "name": "RSVD_15_13",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_CLK_CONF",
     "custom": ""
    },
    {
     "name": "XOSC_CLK_CONF",
     "bitwidth": 16,
     "address": 34,
     "desc": "XTAL oscillator clock configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "XOSC_MODE",
       "width": 1,
       "offset": 0,
       "desc": "Amplitude selection bit",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Lower amplitude with lower power consumption but higher phase noise"
        },
        {
         "value": 1,
         "desc": "Higher amplitude with higher power consumption but lower phase noise"
        }
       ]
      },
      {
       "name": "XOSC_FILT_EN",
       "width": 1,
       "offset": 1,
       "desc": "XOSC supply filter",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables internal filter for low power boot-up"
        },
        {
         "value": 1,
         "desc": "Enables internal filter for best phase noise"
        }
       ]
      },
      {
       "name": "XOSC_DC_DIS",
       "width": 1,
       "offset": 2,
       "desc": "Deactivate duty-cycling mode, if XTAL is used as reference clock and RC osc. is used as system clock.",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Activate XTAL duty-cycling"
        },
        {
         "value": 1,
         "desc": "Deactivate XTAL duty-cycling (always on)"
        }
       ]
      },
      {
       "name": "XOSC_STABLE",
       "width": 1,
       "offset": 3,
       "desc": "Outputs if XTAL is stable",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "XTAL not stable"
        },
        {
         "value": 1,
         "desc": "XTAL stable"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_XOSC_CLK_CONF",
     "custom": ""
    },
    {
     "name": "RC_CLK_CONF",
     "bitwidth": 16,
     "address": 36,
     "desc": "RC clock configuration register",
     "info": "<html >\\n <head>\\n  <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n   .style9 {\\n       background-color: #ff00ff;\\n       color: #ffff33\\n   }\\n   .style8 {\\n       background-color: #66ffcc;\\n       color: #990099\\n   }\\n   .style7 {\\n       background-color: #ccffcc;\\n       color: #0066cc\\n   }\\n   .style6 {\\n       background-color: #ffffcc;\\n       color: #009900\\n   }\\n   .style11 {\\n       background-color: #ccffcc;\\n       color: #000066\\n   }\\n   .style5 {\\n       background-color: #99ff99;\\n       color: #cc0033\\n   }\\n   .style10 {\\n       background-color: #00cccc;\\n       color: #99ff99\\n   }\\n   .style4 {\\n       background-color: #ccffff;\\n       color: #cc0033\\n   }\\n   .style3 {\\n       background-color: teal;\\n       color: #0000dd\\n   }\\n   .style2 {\\n       background-color: aqua;\\n       color: #0000cc\\n   }\\n   .style1 {\\n       background-color: silver;\\n       color: blue\\n   }\\n   .style0 {\\n       background-color: #ffffcc;\\n       color: #000099\\n   }-->  </style>\\n </head>\\n <body><p style=\\\"margin-top:0\\\">This register should be written at the very end of an I2C transmission. As it switches the clocks it is required to wait for &gt;= 20 sys-clk cycles before the next I2C-access starts.</p></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enables RC oscillator",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables RC oscillator"
        },
        {
         "value": 1,
         "desc": "Enables RC oscillator"
        }
       ]
      },
      {
       "name": "RC_COUNT",
       "width": 1,
       "offset": 1,
       "desc": "Triggers RC oscillator counting",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No action"
        },
        {
         "value": 1,
         "desc": "Executes frequency counting (auto-cleared)"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "TRIM_VAL",
       "width": 5,
       "offset": 4,
       "desc": "",
       "info": "<html >\\n <body><div>Trim value for the RC oscillator</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_RC_CLK_CONF",
     "custom": ""
    },
    {
     "name": "RC_T_TRIM",
     "bitwidth": 16,
     "address": 37,
     "desc": "RC clock trimming register",
     "info": "",
     "reset": [
      {
       "value": 384,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MUL",
       "width": 16,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Time used to measure the frequency for trimming of the RC oscillator</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_RC_T_TRIM",
     "custom": ""
    },
    {
     "name": "RC_TRIM_VAL",
     "bitwidth": 16,
     "address": 39,
     "desc": "RC clock trimming counter value register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 16,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Measured valued used to measure the frequency for trimming of the RC oscillator</div></body>\\n</html>",
       "access": "ro",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_RC_TRIM_VAL",
     "custom": ""
    },
    {
     "name": "TEST",
     "bitwidth": 16,
     "address": 160,
     "desc": "IO - design for test register",
     "info": "<html >\\n <head>\\n  <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n   .style9 {\\n       background-color: #ff00ff;\\n       color: #ffff33\\n   }\\n   .style8 {\\n       background-color: #66ffcc;\\n       color: #990099\\n   }\\n   .style7 {\\n       background-color: #ccffcc;\\n       color: #0066cc\\n   }\\n   .style6 {\\n       background-color: #ffffcc;\\n       color: #009900\\n   }\\n   .style11 {\\n       background-color: #ccffcc;\\n       color: #000066\\n   }\\n   .style5 {\\n       background-color: #99ff99;\\n       color: #cc0033\\n   }\\n   .style10 {\\n       background-color: #00cccc;\\n       color: #99ff99\\n   }\\n   .style4 {\\n       background-color: #ccffff;\\n       color: #cc0033\\n   }\\n   .style3 {\\n       background-color: teal;\\n       color: #0000dd\\n   }\\n   .style2 {\\n       background-color: aqua;\\n       color: #0000cc\\n   }\\n   .style1 {\\n       background-color: silver;\\n       color: blue\\n   }\\n   .style0 {\\n       background-color: #ffffcc;\\n       color: #000099\\n   }-->  </style>\\n </head>\\n <body><p style=\\\"margin-top:0\\\">This register should be written at the very end of an I2C transmission. As it switches the clocks it is required to wait for &gt;= 20 sys-clk cycles before the next I2C-access starts.</p></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "power_on_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MODE",
       "width": 3,
       "offset": 0,
       "desc": "Test mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disabled (=mission mode)"
        },
        {
         "value": 1,
         "desc": "MBIST mode"
        },
        {
         "value": 2,
         "desc": "Scan mode FE"
        },
        {
         "value": 3,
         "desc": "Scan mode BE"
        },
        {
         "value": 4,
         "desc": "VCO test mode (overwrite TRIG1 to output divided VCO frequency)"
        },
        {
         "value": 5,
         "desc": "SYS_CLK test mode (overwrite TRIG1 to output SYS_CLK frequency)"
        },
        {
         "value": 6,
         "desc": "SCAN_FE_LDO_OFF"
        },
        {
         "value": 7,
         "desc": "SCAN_BE_LDO_OFF"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "IO",
     "concat_name": "IO_TEST",
     "custom": ""
    },
    {
     "name": "I2C_CONF",
     "bitwidth": 16,
     "address": 271,
     "desc": "I2C configuration register",
     "info": "<html >\\n    <head>\\n        <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n            .style9 {\\n                background-color: #ff00ff;\\n                color: #ffff33\\n            }\\n            .style8 {\\n                background-color: #66ffcc;\\n                color: #990099\\n            }\\n            .style7 {\\n                background-color: #ccffcc;\\n                color: #0066cc\\n            }\\n            .style6 {\\n                background-color: #ffffcc;\\n                color: #009900\\n            }\\n            .style11 {\\n                background-color: #ccffcc;\\n                color: #000066\\n            }\\n            .style5 {\\n                background-color: #99ff99;\\n                color: #cc0033\\n            }\\n            .style10 {\\n                background-color: #00cccc;\\n                color: #99ff99\\n            }\\n            .style4 {\\n                background-color: #ccffff;\\n                color: #cc0033\\n            }\\n            .style3 {\\n                background-color: teal;\\n                color: #0000dd\\n            }\\n            .style2 {\\n                background-color: aqua;\\n                color: #0000cc\\n            }\\n            .style1 {\\n                background-color: silver;\\n                color: blue\\n            }\\n            .style0 {\\n                background-color: #ffffcc;\\n                color: #000099\\n            }-->  </style>\\n    </head>\\n    <body><p style=\\\"margin-top:0\\\">After write access to this register a STOP-condition (not just RESTART) is required.</p></body>\\n</html>",
     "reset": [
      {
       "value": 13107,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "SLAVE_ADDR",
       "width": 7,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>I2C slave address</div></body>\\n</html>",
       "access": "ro",
       "enums": []
      },
      {
       "name": "CLK_GATE",
       "width": 1,
       "offset": 7,
       "desc": "Enable clock gating for the I2C interface",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "USER_ADDR",
       "width": 7,
       "offset": 8,
       "desc": "",
       "info": "<html >\\n <body><div>I2C user address</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RUN_RES",
       "width": 1,
       "offset": 15,
       "desc": "Kernel run-mode reset",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "I2C",
     "concat_name": "I2C_I2C_CONF",
     "custom": ""
    },
    {
     "name": "CHIP_TYPE",
     "bitwidth": 16,
     "address": 512,
     "desc": "Chip-type ID register",
     "info": "",
     "reset": [
      {
       "value": 32770,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TYPE",
       "width": 8,
       "offset": 0,
       "desc": "Chip version: 8-bit number",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "STEP",
       "width": 2,
       "offset": 8,
       "desc": "Design step",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "A_STEP"
        },
        {
         "value": 1,
         "desc": "B_STEP"
        },
        {
         "value": 2,
         "desc": "C_STEP"
        },
        {
         "value": 3,
         "desc": "D_STEP"
        }
       ]
      },
      {
       "name": "TECH",
       "width": 2,
       "offset": 10,
       "desc": "Technology",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Infineon B11HFC"
        },
        {
         "value": 1,
         "desc": "Global Foundries B8XPE"
        },
        {
         "value": 2,
         "desc": "RSVD2"
        },
        {
         "value": 3,
         "desc": "RSVD3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "PROD",
       "width": 1,
       "offset": 15,
       "desc": "Productive version",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Non-productive"
        },
        {
         "value": 1,
         "desc": "Productive"
        }
       ]
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_CHIP_TYPE",
     "custom": ""
    },
    {
     "name": "CHIP0_UID",
     "bitwidth": 16,
     "address": 513,
     "desc": "Chip ID 0 register ",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "UID",
       "width": 16,
       "offset": 0,
       "desc": "Chip UID: 16 bits of the 48 bits of the chip UID",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_CHIP0_UID",
     "custom": ""
    },
    {
     "name": "CHIP1_UID",
     "bitwidth": 16,
     "address": 514,
     "desc": "Chip ID 1 register ",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "UID",
       "width": 16,
       "offset": 0,
       "desc": "Chip UID: 16 bits of the 48 bits of the chip UID",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_CHIP1_UID",
     "custom": ""
    },
    {
     "name": "CHIP2_UID",
     "bitwidth": 16,
     "address": 515,
     "desc": "Chip ID 2 register ",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "UID",
       "width": 16,
       "offset": 0,
       "desc": "Chip UID: 16 bits of the 48 bits of the chip UID",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_CHIP2_UID",
     "custom": ""
    },
    {
     "name": "TEMP_CAL",
     "bitwidth": 16,
     "address": 516,
     "desc": "Temperature calibration register ",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 6,
       "offset": 0,
       "desc": "Temperature calibration value",
       "info": "<html >\\n    <body><p>Formula for temperature:</p><p>T (deg. C) = (\\\"ADC-value\\\" * 0.5869 - 418) / (\\\"Register value\\\" * 0.5869 - 418) * 145 - 40</p><p>ADC-value: the ADC-value of the temperature sensor</p><p>Register value: value stored in this register</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 10,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_TEMP_CAL",
     "custom": ""
    },
    {
     "name": "EFUSE",
     "bitwidth": 16,
     "address": 528,
     "desc": "Electrical fuse register",
     "info": "<html>\\n  <body>\\n  </body>\\n</html>\\n",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable e-fuse",
       "info": "<html >\\n    <body><div>Note:</div><div><ul><li>RFT0:FRTSIGCLK_DIV is set to 4000<sub>D</sub></li><li>RFT0:ID and RFT1:ID is used for programming data</li><li>SYS_CLK is enabled</li><li>RF signals of RFT0 and RFT1 are isolated to reset value</li></ul></div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enabled"
        },
        {
         "value": 1,
         "desc": "Disabled"
        }
       ]
      },
      {
       "name": "SENSE",
       "width": 1,
       "offset": 1,
       "desc": "Start e-fuse read sequence",
       "info": "<html >\\n    <head/>\\n    <body><p>Note: Reading is done with the configured sense margin values.</p></body>\\n</html>",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No effect/stops e-fuse reading"
        },
        {
         "value": 1,
         "desc": "Executes e-fuse reading"
        }
       ]
      },
      {
       "name": "PRG",
       "width": 1,
       "offset": 2,
       "desc": "Start e-fuse program sequence",
       "info": "<html >\\n    <head/>\\n    <body><p>Note: Programming data are taken from RFT0:ID and RFT1:ID registers.</p></body>\\n</html>",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No effect/stops e-fuse programming"
        },
        {
         "value": 1,
         "desc": "Executes e-fuse programming"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "SENSE_L",
       "width": 1,
       "offset": 4,
       "desc": "Enable low sense margin for production test",
       "info": "<html >\\n    <head/>\\n    <body><p>Note: Sense margin high and low are mutually exclusive.</p></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disabled"
        },
        {
         "value": 1,
         "desc": "Enabled"
        }
       ]
      },
      {
       "name": "SENSE_H",
       "width": 1,
       "offset": 5,
       "desc": "Enable high sense margin for production test",
       "info": "<html >\\n    <head/>\\n    <body><p>Note: Sense margin high and low are mutually exclusive.</p></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disabled"
        },
        {
         "value": 1,
         "desc": "Enabled"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "LOCKED",
       "width": 1,
       "offset": 14,
       "desc": "E-fuse locked: indicates that the e-fuses have already been written",
       "info": "<html >\\n    <body><p>Note: Only valid after EFUSE_SENSE was executed.</p></body>\\n</html>",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "E-fuse not programmed"
        },
        {
         "value": 1,
         "desc": "E-fuse programmed and locked"
        }
       ]
      },
      {
       "name": "READY",
       "width": 1,
       "offset": 15,
       "desc": "E-fuse ready: indicates that the e-fuses have been sensed",
       "info": "<html >\\n    <body><p>Note: Only valid after SENSE was executed!</p></body>\\n</html>",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Not ready"
        },
        {
         "value": 1,
         "desc": "Ready"
        }
       ]
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_EFUSE",
     "custom": ""
    },
    {
     "name": "EFUSE_DIV",
     "bitwidth": 16,
     "address": 529,
     "desc": "E-fuse program clock divider register",
     "info": "",
     "reset": [
      {
       "value": 19199,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "DIV",
       "width": 16,
       "offset": 0,
       "desc": "E-fuse clock divider",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "CHIP_ID",
     "concat_name": "CHIP_ID_EFUSE_DIV",
     "custom": ""
    },
    {
     "name": "SEQ_MAIN_CONF",
     "bitwidth": 16,
     "address": 768,
     "desc": "Sequencer main configuration register",
     "info": "",
     "reset": [
      {
       "value": 32,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "SEQ_EXECUTE",
       "width": 1,
       "offset": 0,
       "desc": "Sequence execute bit to start/stop the execution of a sequence of frames",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Stops the current sequence after the current frame/shows that no sequence is being executed"
        },
        {
         "value": 1,
         "desc": "Starts the sequence of frames/shows that a sequence is being executed"
        }
       ]
      },
      {
       "name": "SW_RST",
       "width": 1,
       "offset": 1,
       "desc": "Executes a software reset of the whole MMIC",
       "info": "<html >\\n <head>\\n  <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n   .style9 {\\n       background-color: #ff00ff;\\n       color: #ffff33\\n   }\\n   .style8 {\\n       background-color: #66ffcc;\\n       color: #990099\\n   }\\n   .style7 {\\n       background-color: #ccffcc;\\n       color: #0066cc\\n   }\\n   .style6 {\\n       background-color: #ffffcc;\\n       color: #009900\\n   }\\n   .style11 {\\n       background-color: #ccffcc;\\n       color: #000066\\n   }\\n   .style5 {\\n       background-color: #99ff99;\\n       color: #cc0033\\n   }\\n   .style10 {\\n       background-color: #00cccc;\\n       color: #99ff99\\n   }\\n   .style4 {\\n       background-color: #ccffff;\\n       color: #cc0033\\n   }\\n   .style3 {\\n       background-color: teal;\\n       color: #0000dd\\n   }\\n   .style2 {\\n       background-color: aqua;\\n       color: #0000cc\\n   }\\n   .style1 {\\n       background-color: silver;\\n       color: blue\\n   }\\n   .style0 {\\n       background-color: #ffffcc;\\n       color: #000099\\n   }-->  </style>\\n </head>\\n <body><p style=\\\"margin-top: 0px;\\\">This bit should only be set at the very end of an I2C transmission. As it reboots the chip it is required to wait for &gt;= 20 sys-clk cycles after reset before the next I2C-access starts.</p></body>\\n</html>",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No effect"
        },
        {
         "value": 1,
         "desc": "Executes a software reset and clears this bit"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "TRIG_MFM",
       "width": 1,
       "offset": 3,
       "desc": "Trigger for manual frequency measurement",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No effect"
        },
        {
         "value": 1,
         "desc": "Executes a single manual frequency measurement and clears this bit"
        }
       ]
      },
      {
       "name": "LDO_MODE",
       "width": 1,
       "offset": 4,
       "desc": "LDO mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "High-performance mode"
        },
        {
         "value": 1,
         "desc": "State machine controlled"
        }
       ]
      },
      {
       "name": "ADC_CALIB",
       "width": 1,
       "offset": 5,
       "desc": "Triggering of ADC calibration",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Only when starting a sequence of frames"
        },
        {
         "value": 1,
         "desc": "When starting a sequence of frames and whenever a frequency measurement with AFC is triggered"
        }
       ]
      },
      {
       "name": "ENV_CHK",
       "width": 1,
       "offset": 6,
       "desc": "Enables environmental check to prevent out-of-band emissions",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Deactivated"
        },
        {
         "value": 1,
         "desc": "Measurement before each activation of HF"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NEXT_FRAME_CONF",
       "width": 1,
       "offset": 8,
       "desc": "Number of the frame configuration that will be executed with the next frame",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Frame configuration 0"
        },
        {
         "value": 1,
         "desc": "Frame configuration 1"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "TRIG_EXT_EN",
       "width": 1,
       "offset": 11,
       "desc": "Enables sequence execution via external input trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables external trigger â€“ use internal trigger via SEQ_EXECUTE"
        },
        {
         "value": 1,
         "desc": "Enables external trigger"
        }
       ]
      },
      {
       "name": "TRIG_MODE",
       "width": 1,
       "offset": 12,
       "desc": "Select active trigger mode of the external trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Sequence is started with the positive edge of a trigger, for example triggered by a signal from a microcontroller"
        },
        {
         "value": 1,
         "desc": "Sequence is executed as long as trigger is high (active), for example triggering sequence when there is no light"
        }
       ]
      },
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 13,
       "desc": "Number of external input trigger that is used for the start trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Input trigger 0"
        },
        {
         "value": 1,
         "desc": "Input trigger 1"
        },
        {
         "value": 2,
         "desc": "Input trigger 2"
        },
        {
         "value": 3,
         "desc": "Input trigger 3"
        },
        {
         "value": 4,
         "desc": "Input trigger 4"
        },
        {
         "value": 5,
         "desc": "Input trigger 5"
        },
        {
         "value": 6,
         "desc": "Input trigger 6"
        },
        {
         "value": 7,
         "desc": "Input trigger 7"
        }
       ]
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_SEQ_MAIN_CONF",
     "custom": ""
    },
    {
     "name": "FRAME_COUNTER",
     "bitwidth": 16,
     "address": 769,
     "desc": "Frame counter register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "CNT",
       "width": 10,
       "offset": 0,
       "desc": "Bit field for frame counter",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME_COUNTER",
     "custom": ""
    },
    {
     "name": "FRAME_REP_CONF",
     "bitwidth": 16,
     "address": 770,
     "desc": "Frame repetition configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 10,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><p>0 ... infinite number of repetitions</p><p>otherwise: number of frame repetitions = VAL</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME_REP_CONF",
     "custom": ""
    },
    {
     "name": "FRAME0_TIME",
     "bitwidth": 16,
     "address": 771,
     "desc": "Frame 0 time register",
     "info": "",
     "reset": [
      {
       "value": 37485,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Exponent of the frame time of the current frame configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "<html >\\n    <body><div>Frame time of the current frame configuration in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_TIME",
     "custom": ""
    },
    {
     "name": "FRAME0_LIST_REP",
     "bitwidth": 16,
     "address": 772,
     "desc": "Frame 0 list repetition register",
     "info": "",
     "reset": [
      {
       "value": 64,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "FRAME_LIST_REP",
       "width": 16,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Bit field for frame list repetitions of the current frame configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_LIST_REP",
     "custom": ""
    },
    {
     "name": "FRAME0_HEATING",
     "bitwidth": 16,
     "address": 773,
     "desc": "Frame 0 heating register",
     "info": "",
     "reset": [
      {
       "value": 2,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "NR_HEATING_PULSES",
       "width": 4,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Bit field for the number of heating pulses of the current frame configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_HEATING",
     "custom": ""
    },
    {
     "name": "FRAME0_SEQ_TRIG_MAP_IRQ",
     "bitwidth": 16,
     "address": 774,
     "desc": "Sequencer trigger map IRQ register",
     "info": "",
     "reset": [
      {
       "value": 1024,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the IRQ trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable for the IRQ trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables trigger"
        },
        {
         "value": 1,
         "desc": "Enables trigger"
        }
       ]
      },
      {
       "name": "TRIG_COUNT",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "<html >\\n    <body><div>Number of pulse configurations after which to send an IRQ signal of the current frame configuration.</div><div>Note: a zero value will deactivate the feature.</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_SEQ_TRIG_MAP_IRQ",
     "custom": ""
    },
    {
     "name": "FRAME0_LIST0_CONF",
     "bitwidth": 16,
     "address": 779,
     "desc": "Frame 0 list entry 0 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_LIST0_CONF",
     "custom": ""
    },
    {
     "name": "FRAME0_LIST1_CONF",
     "bitwidth": 16,
     "address": 780,
     "desc": "Frame 0 list entry 1 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_LIST1_CONF",
     "custom": ""
    },
    {
     "name": "FRAME0_LIST2_CONF",
     "bitwidth": 16,
     "address": 781,
     "desc": "Frame 0 list entry 2 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_LIST2_CONF",
     "custom": ""
    },
    {
     "name": "FRAME0_LIST3_CONF",
     "bitwidth": 16,
     "address": 782,
     "desc": "Frame 0 list entry 3 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME0_LIST3_CONF",
     "custom": ""
    },
    {
     "name": "FRAME1_TIME",
     "bitwidth": 16,
     "address": 787,
     "desc": "Frame 1 time register",
     "info": "",
     "reset": [
      {
       "value": 37485,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Exponent of the frame time of the current frame configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "<html >\\n    <body><div>Frame time of the current frame configuration in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_TIME",
     "custom": ""
    },
    {
     "name": "FRAME1_LIST_REP",
     "bitwidth": 16,
     "address": 788,
     "desc": "Frame 1 list repetition register",
     "info": "",
     "reset": [
      {
       "value": 64,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "FRAME_LIST_REP",
       "width": 16,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Bit field for frame list repetitions of the current frame configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_LIST_REP",
     "custom": ""
    },
    {
     "name": "FRAME1_HEATING",
     "bitwidth": 16,
     "address": 789,
     "desc": "Frame 1 heating register",
     "info": "",
     "reset": [
      {
       "value": 2,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "NR_HEATING_PULSES",
       "width": 4,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Bit field for the number of heating pulses of the current frame configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_HEATING",
     "custom": ""
    },
    {
     "name": "FRAME1_SEQ_TRIG_MAP_IRQ",
     "bitwidth": 16,
     "address": 790,
     "desc": "Sequencer trigger map IRQ register",
     "info": "",
     "reset": [
      {
       "value": 1024,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the IRQ trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable for the IRQ trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables trigger"
        },
        {
         "value": 1,
         "desc": "Enables trigger"
        }
       ]
      },
      {
       "name": "TRIG_COUNT",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "<html >\\n    <body><div>Number of pulse configurations after which to send an IRQ signal of the current frame configuration.</div><div>Note: a zero value will deactivate the feature.</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_SEQ_TRIG_MAP_IRQ",
     "custom": ""
    },
    {
     "name": "FRAME1_LIST0_CONF",
     "bitwidth": 16,
     "address": 795,
     "desc": "Frame 1 list entry 0 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_LIST0_CONF",
     "custom": ""
    },
    {
     "name": "FRAME1_LIST1_CONF",
     "bitwidth": 16,
     "address": 796,
     "desc": "Frame 1 list entry 1 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_LIST1_CONF",
     "custom": ""
    },
    {
     "name": "FRAME1_LIST2_CONF",
     "bitwidth": 16,
     "address": 797,
     "desc": "Frame 1 list entry 2 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_LIST2_CONF",
     "custom": ""
    },
    {
     "name": "FRAME1_LIST3_CONF",
     "bitwidth": 16,
     "address": 798,
     "desc": "Frame 1 list entry 3 register",
     "info": "<html >\\n <body><div>It is not allowed to use the same pulse configuration multiple times in one frame configuration list.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ENTRY_EN",
       "width": 1,
       "offset": 0,
       "desc": "List entry enable, first entry is enabled by default.",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables list entry"
        },
        {
         "value": 1,
         "desc": "Enables list entry"
        }
       ]
      },
      {
       "name": "PC_CONF_NR",
       "width": 2,
       "offset": 1,
       "desc": "The pulse configuration number of the list entry",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "PC 0"
        },
        {
         "value": 1,
         "desc": "PC 1"
        },
        {
         "value": 2,
         "desc": "PC 2"
        },
        {
         "value": 3,
         "desc": "PC 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 13,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_FRAME1_LIST3_CONF",
     "custom": ""
    },
    {
     "name": "PC0_CONF_TIME",
     "bitwidth": 16,
     "address": 899,
     "desc": "Pulse configuration 0 PRT register",
     "info": "",
     "reset": [
      {
       "value": 38405,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Exponent of the PRT of the current pulse configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "<html >\\n    <body><div>PRT of the current pulse configuration in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_PC0_CONF_TIME",
     "custom": ""
    },
    {
     "name": "PC1_CONF_TIME",
     "bitwidth": 16,
     "address": 907,
     "desc": "Pulse configuration 1 PRT register",
     "info": "",
     "reset": [
      {
       "value": 38405,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Exponent of the PRT of the current pulse configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "<html >\\n    <body><div>PRT of the current pulse configuration in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_PC1_CONF_TIME",
     "custom": ""
    },
    {
     "name": "PC2_CONF_TIME",
     "bitwidth": 16,
     "address": 915,
     "desc": "Pulse configuration 2 PRT register",
     "info": "",
     "reset": [
      {
       "value": 38405,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Exponent of the PRT of the current pulse configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "<html >\\n    <body><div>PRT of the current pulse configuration in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_PC2_CONF_TIME",
     "custom": ""
    },
    {
     "name": "PC3_CONF_TIME",
     "bitwidth": 16,
     "address": 923,
     "desc": "Pulse configuration 3 PRT register",
     "info": "",
     "reset": [
      {
       "value": 38405,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div>Exponent of the PRT of the current pulse configuration</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "<html >\\n    <body><div>PRT of the current pulse configuration in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_PC3_CONF_TIME",
     "custom": ""
    },
    {
     "name": "T_BOOT_VCO_FS",
     "bitwidth": 16,
     "address": 963,
     "desc": "VCO boot register",
     "info": "",
     "reset": [
      {
       "value": 3840,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 16,
       "offset": 0,
       "desc": "Boot-up time of the VCO and frequency stabilization module in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_VCO_FS",
     "custom": ""
    },
    {
     "name": "T_BOOT_TXCHAIN",
     "bitwidth": 16,
     "address": 964,
     "desc": "TX boot register",
     "info": "",
     "reset": [
      {
       "value": 40,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Boot-up time of the TX chain module in system clock cycles",
       "info": "<html >\\n <head>\\n  <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n   .style9 {\\n       background-color: #ff00ff;\\n       color: #ffff33\\n   }\\n   .style8 {\\n       background-color: #66ffcc;\\n       color: #990099\\n   }\\n   .style7 {\\n       background-color: #ccffcc;\\n       color: #0066cc\\n   }\\n   .style6 {\\n       background-color: #ffffcc;\\n       color: #009900\\n   }\\n   .style11 {\\n       background-color: #ccffcc;\\n       color: #000066\\n   }\\n   .style5 {\\n       background-color: #99ff99;\\n       color: #cc0033\\n   }\\n   .style10 {\\n       background-color: #00cccc;\\n       color: #99ff99\\n   }\\n   .style4 {\\n       background-color: #ccffff;\\n       color: #cc0033\\n   }\\n   .style3 {\\n       background-color: teal;\\n       color: #0000dd\\n   }\\n   .style2 {\\n       background-color: aqua;\\n       color: #0000cc\\n   }\\n   .style1 {\\n       background-color: silver;\\n       color: blue\\n   }\\n   .style0 {\\n       background-color: #ffffcc;\\n       color: #000099\\n   }-->  </style>\\n </head>\\n <body><p>The value of the boot-up time programmed here must be &gt;=1 clock cycles</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_TXCHAIN",
     "custom": ""
    },
    {
     "name": "T_BOOT_RXCHAIN",
     "bitwidth": 16,
     "address": 965,
     "desc": "RX boot register",
     "info": "",
     "reset": [
      {
       "value": 50,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Boot-up time of the RX chain module in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_RXCHAIN",
     "custom": ""
    },
    {
     "name": "T_BOOT_ADC",
     "bitwidth": 16,
     "address": 966,
     "desc": "ADC boot register",
     "info": "",
     "reset": [
      {
       "value": 670,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 16,
       "offset": 0,
       "desc": "Boot-up time of the ADC module in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_ADC",
     "custom": ""
    },
    {
     "name": "T_BOOT_BANDGAP",
     "bitwidth": 16,
     "address": 967,
     "desc": "Bandgap boot register",
     "info": "",
     "reset": [
      {
       "value": 4416,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 16,
       "offset": 0,
       "desc": "Boot-up time of the internal bandgap in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_BANDGAP",
     "custom": ""
    },
    {
     "name": "T_BOOT_REF_CLK",
     "bitwidth": 16,
     "address": 968,
     "desc": "Reference clock boot register",
     "info": "",
     "reset": [
      {
       "value": 29326,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 5,
       "offset": 0,
       "desc": "Exponent of the boot-up delay of the reference clock",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 8,
       "offset": 5,
       "desc": "Prefactor of the boot-up delay of the reference clock",
       "info": "<html >\\n    <body><div>Boot-up delay of the reference clock with respect to the beginning of a frame in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EXP_BG_MULT",
       "width": 3,
       "offset": 13,
       "desc": "Exponent of the boot-up time of the reference clock as a multiplication factor of the bandgap boot-up time during start of sequence",
       "info": "<html >\\n    <body><div>Reference clock boot-up time during start of sequence: (bandgap boot-up time) * 2<sup>EXP_BG_MULT</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_REF_CLK",
     "custom": ""
    },
    {
     "name": "T_BOOT_EXT_LDO",
     "bitwidth": 16,
     "address": 969,
     "desc": "LDO boot register",
     "info": "",
     "reset": [
      {
       "value": 24007,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 3,
       "offset": 0,
       "desc": "Exponent of the boot-up time of the external LDO",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 13,
       "offset": 3,
       "desc": "Prefactor of the boot-up time of the external LDO",
       "info": "<html >\\n    <body><div>Boot-up time of the external LDO in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_BOOT_EXT_LDO",
     "custom": ""
    },
    {
     "name": "T_AFC",
     "bitwidth": 16,
     "address": 971,
     "desc": "AFC delay register",
     "info": "",
     "reset": [
      {
       "value": 9605,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 3,
       "offset": 0,
       "desc": "Exponent of the AFC delay",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 13,
       "offset": 3,
       "desc": "Prefactor of the AFC delay",
       "info": "<html >\\n    <body><div>AFC delay before a frequency measurement is triggered in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_T_AFC",
     "custom": ""
    },
    {
     "name": "SEQ_TRIG_MAP_AP",
     "bitwidth": 16,
     "address": 978,
     "desc": "Sequencer trigger map active phase register",
     "info": "<html >\\n    <body><p>Note: during sampling phase, this signal is high</p></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the active phase trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable for the active phase trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables trigger"
        },
        {
         "value": 1,
         "desc": "Enables trigger"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_SEQ_TRIG_MAP_AP",
     "custom": ""
    },
    {
     "name": "SEQ_TRIG_MAP_LDO",
     "bitwidth": 16,
     "address": 979,
     "desc": "Sequencer trigger map for external LDO register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the external LDO",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable for the external LDO trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables trigger"
        },
        {
         "value": 1,
         "desc": "Enables trigger"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_SEQ_TRIG_MAP_LDO",
     "custom": ""
    },
    {
     "name": "SEQ_TRIG_MAP_BT",
     "bitwidth": 16,
     "address": 980,
     "desc": "Sequencer trigger map boot-up phase register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the boot-up phase triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_SEL",
       "width": 3,
       "offset": 3,
       "desc": "Select module whose boot-up phase is mapped to the output trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Deactivates this trigger"
        },
        {
         "value": 1,
         "desc": "Trigger during VCO boot-up phase"
        },
        {
         "value": 2,
         "desc": "Trigger during TX boot-up phase"
        },
        {
         "value": 3,
         "desc": "Trigger during RX boot-up phase"
        },
        {
         "value": 4,
         "desc": "Trigger during ADC boot-up phase"
        },
        {
         "value": 5,
         "desc": "Trigger during BG boot-up phase"
        },
        {
         "value": 6,
         "desc": "Trigger during LDO boot-up phase"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 10,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_SEQ_TRIG_MAP_BT",
     "custom": ""
    },
    {
     "name": "SEQ_EN_OW",
     "bitwidth": 16,
     "address": 1024,
     "desc": "Sequencer overwrite register",
     "info": "",
     "reset": [
      {
       "value": 96,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "BG_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite the bandgap control signal",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of bandgap signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of bandgap signal"
        }
       ]
      },
      {
       "name": "BG_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable signal of the bandgap in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the bandgap in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the bandgap in overwrite mode"
        }
       ]
      },
      {
       "name": "INT_LDO_OW_DIS",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the disable signal of the internal LDO",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enables the LDO for the digital supply"
        },
        {
         "value": 1,
         "desc": "Disables the LDO for the digital supply"
        }
       ]
      },
      {
       "name": "INT_LDO_OW",
       "width": 1,
       "offset": 3,
       "desc": "Overwrite of the LDO power mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the LDO power mode"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the LDO power mode"
        }
       ]
      },
      {
       "name": "INT_LDO_OW_PM",
       "width": 1,
       "offset": 4,
       "desc": "Power mode of the internal LDO in overwrite",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "High-performance mode of the LDO power mode in overwrite"
        },
        {
         "value": 1,
         "desc": "Low-power mode of the LDO power mode in overwrite"
        }
       ]
      },
      {
       "name": "EXT_LDO_OW",
       "width": 1,
       "offset": 5,
       "desc": "Enable of the overwrite of the external LDO",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the external LDO signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the external LDO signal"
        }
       ]
      },
      {
       "name": "EXT_LDO_OW_EN",
       "width": 1,
       "offset": 6,
       "desc": "Enable signal of the external LDO in overwrite",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the external LDO signal in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the external LDO signal in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "SEQUENCER",
     "concat_name": "SEQUENCER_SEQ_EN_OW",
     "custom": ""
    },
    {
     "name": "VCO_T_RAMP_DN",
     "bitwidth": 16,
     "address": 4096,
     "desc": "VCO disable delay register",
     "info": "",
     "reset": [
      {
       "value": 9,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 5,
       "offset": 0,
       "desc": "VCO on-time during ramp down of TX power in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_T_RAMP_DN",
     "custom": ""
    },
    {
     "name": "VCO_T_DAC",
     "bitwidth": 16,
     "address": 4097,
     "desc": "DAC enable delay register",
     "info": "",
     "reset": [
      {
       "value": 192,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 10,
       "offset": 0,
       "desc": "DAC delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_T_DAC",
     "custom": ""
    },
    {
     "name": "VCO_TRIG_MAP",
     "bitwidth": 16,
     "address": 4111,
     "desc": "VCO trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger used for the VCO triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_SEL",
       "width": 4,
       "offset": 3,
       "desc": "Select signal mapped to the output trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No signal"
        },
        {
         "value": 1,
         "desc": "VCO enable"
        },
        {
         "value": 2,
         "desc": "LO buffer enable"
        },
        {
         "value": 3,
         "desc": "Divider buffer enable"
        },
        {
         "value": 4,
         "desc": "Divider enable"
        },
        {
         "value": 5,
         "desc": "DAC enable"
        },
        {
         "value": 6,
         "desc": "DAC sample signal (switch)"
        },
        {
         "value": 7,
         "desc": "Vtune disconnect signal (switch)"
        },
        {
         "value": 8,
         "desc": "Counter bias enable"
        },
        {
         "value": 9,
         "desc": "Counter clock enable"
        },
        {
         "value": 10,
         "desc": "Counter reset not"
        },
        {
         "value": 11,
         "desc": "DAC sample signal active while DAC-word is saturated (all-0s or all-1s)"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_TRIG_MAP",
     "custom": ""
    },
    {
     "name": "VCO_PC0_DAC_OFFSET",
     "bitwidth": 16,
     "address": 4112,
     "desc": "VCO DAC offset 0 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_DAC_CTRL",
       "width": 8,
       "offset": 0,
       "desc": "DAC tuning offset value",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>127<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_PC0_DAC_OFFSET",
     "custom": ""
    },
    {
     "name": "VCO_PC1_DAC_OFFSET",
     "bitwidth": 16,
     "address": 4113,
     "desc": "VCO DAC offset 1 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_DAC_CTRL",
       "width": 8,
       "offset": 0,
       "desc": "DAC tuning offset value",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>127<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_PC1_DAC_OFFSET",
     "custom": ""
    },
    {
     "name": "VCO_PC2_DAC_OFFSET",
     "bitwidth": 16,
     "address": 4114,
     "desc": "VCO DAC offset 2 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_DAC_CTRL",
       "width": 8,
       "offset": 0,
       "desc": "DAC tuning offset value",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>127<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_PC2_DAC_OFFSET",
     "custom": ""
    },
    {
     "name": "VCO_PC3_DAC_OFFSET",
     "bitwidth": 16,
     "address": 4115,
     "desc": "VCO DAC offset 3 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_DAC_CTRL",
       "width": 8,
       "offset": 0,
       "desc": "DAC tuning offset value",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>127<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_PC3_DAC_OFFSET",
     "custom": ""
    },
    {
     "name": "VCO_DAC_VALUE",
     "bitwidth": 16,
     "address": 4145,
     "desc": "VCO DAC value register",
     "info": "",
     "reset": [
      {
       "value": 512,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_DAC_CTRL",
       "width": 10,
       "offset": 0,
       "desc": "DAC tuning value of the VCO",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>1023<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_DAC_VALUE",
     "custom": ""
    },
    {
     "name": "VCO_AFC_CONF",
     "bitwidth": 16,
     "address": 4146,
     "desc": "AFC configuration register",
     "info": "",
     "reset": [
      {
       "value": 267,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "AFC_MODE",
       "width": 2,
       "offset": 0,
       "desc": "Automatic frequency control mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "AFC disabled (manual)"
        },
        {
         "value": 1,
         "desc": "Automatic frequency measurement"
        },
        {
         "value": 2,
         "desc": "AFC active in tracking mode without calibration at start-up"
        },
        {
         "value": 3,
         "desc": "AFC active in tracking mode with calibration at start-up"
        }
       ]
      },
      {
       "name": "LO_CNT_DEL",
       "width": 2,
       "offset": 2,
       "desc": "Delay after VCO is enabled and LO counter starts",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "1 clock cycle"
        },
        {
         "value": 1,
         "desc": "2 clock cycles"
        },
        {
         "value": 2,
         "desc": "4 clock cycles"
        },
        {
         "value": 3,
         "desc": "8 clock cycles"
        }
       ]
      },
      {
       "name": "AFC_FRM_TRIG",
       "width": 8,
       "offset": 4,
       "desc": "",
       "info": "<html >\\n    <body><div>Number of frames after the frequency control logic is triggered:</div><div>0<sub>D</sub> ... Each frame triggers the AFC logic</div><div>1<sub>D</sub> ... Every second frame triggers the AFC logic</div><div>255<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_CONF",
     "custom": ""
    },
    {
     "name": "VCO_AFC_DURATION",
     "bitwidth": 16,
     "address": 4147,
     "desc": "AFC counting duration in system clock cycles",
     "info": "",
     "reset": [
      {
       "value": 115,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 16,
       "offset": 0,
       "desc": "AFC counting duration in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_DURATION",
     "custom": ""
    },
    {
     "name": "VCO_AFC_CNT0",
     "bitwidth": 16,
     "address": 4148,
     "desc": "ACF counter 0 register",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_CNT",
       "width": 16,
       "offset": 0,
       "desc": "Lower 16 bits of the counter value",
       "info": "",
       "access": "ro",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_CNT0",
     "custom": ""
    },
    {
     "name": "VCO_AFC_CNT1",
     "bitwidth": 16,
     "address": 4149,
     "desc": "ACF counter 1 register",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_CNT",
       "width": 8,
       "offset": 0,
       "desc": "Upper 8 bits of the counter value",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_CNT1",
     "custom": ""
    },
    {
     "name": "VCO_AFC_REF0",
     "bitwidth": 16,
     "address": 4150,
     "desc": "ACF reference 0 register",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 9059,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_CNT_REF",
       "width": 16,
       "offset": 0,
       "desc": "Lower 16 bits of the reference counter value",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_REF0",
     "custom": ""
    },
    {
     "name": "VCO_AFC_REF1",
     "bitwidth": 16,
     "address": 4151,
     "desc": "ACF reference 1 register",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_CNT_REF",
       "width": 8,
       "offset": 0,
       "desc": "Upper 8 bits of the reference counter value",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_REF1",
     "custom": ""
    },
    {
     "name": "VCO_AFC_TH0",
     "bitwidth": 16,
     "address": 4152,
     "desc": "ACF threshold 0 register (large step)",
     "info": "",
     "reset": [
      {
       "value": 259,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 8,
       "offset": 0,
       "desc": "Maximum deviation 0 from reference value",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "DAC_STEP",
       "width": 8,
       "offset": 8,
       "desc": "DAC step 0 when threshold exceeded",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_TH0",
     "custom": ""
    },
    {
     "name": "VCO_AFC_TH1",
     "bitwidth": 16,
     "address": 4153,
     "desc": "ACF threshold 1 register (small step)",
     "info": "",
     "reset": [
      {
       "value": 778,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 8,
       "offset": 0,
       "desc": "Maximum deviation 1 from reference value",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "DAC_STEP",
       "width": 8,
       "offset": 8,
       "desc": "DAC step 1 when threshold exceeded",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_AFC_TH1",
     "custom": ""
    },
    {
     "name": "VCO_TEST0",
     "bitwidth": 16,
     "address": 4176,
     "desc": "VCO test register 0",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LO_BUF_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the buffer of the local oscillator",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the LO buffer signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the LO buffer signal"
        }
       ]
      },
      {
       "name": "LO_BUF_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable buffer of the local oscillator in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the LO buffer in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the LO buffer in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_DAC_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the DAC enable signal",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the DAC enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the DAC enable signal"
        }
       ]
      },
      {
       "name": "LO_DAC_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable DAC in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the DAC enable in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the DAC enable in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_VTUNE_CAP_OW",
       "width": 1,
       "offset": 4,
       "desc": "Overwrite of the switch that connects the external capacitor with the Vtune port",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the Vtune disconnect signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the Vtune disconnect signal"
        }
       ]
      },
      {
       "name": "LO_VTUNE_CAP_OW_DIS",
       "width": 1,
       "offset": 5,
       "desc": "Control signal to disconnect the external capacitor from Vtune port in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Connect the external capacitor from Vtune port in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Disconnect the external capacitor from Vtune port in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_DAC_SAMPLE_OW",
       "width": 1,
       "offset": 6,
       "desc": "Overwrite of the sample switch that connects the DAC and the Vtune port",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the DAC sample signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the DAC sample signal"
        }
       ]
      },
      {
       "name": "LO_DAC_SAMPLE_OW_CON",
       "width": 1,
       "offset": 7,
       "desc": "Control signal to disconnect the DAC from Vtune port in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disconnect the DAC from Vtune port in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Connect the DAC from Vtune port in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_VCO_OW",
       "width": 1,
       "offset": 8,
       "desc": "Overwrite of the enable signal of the VCO",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the VCO enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the VCO enable signal"
        }
       ]
      },
      {
       "name": "LO_VCO_OW_EN",
       "width": 1,
       "offset": 9,
       "desc": "Enable VCO in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the VCO in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the VCO in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_DIV_1V5_OW",
       "width": 1,
       "offset": 10,
       "desc": "Overwrite of the bias enable of the counter",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the counter bias enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the counter bias enable signal"
        }
       ]
      },
      {
       "name": "LO_DIV_1V5_OW_EN",
       "width": 1,
       "offset": 11,
       "desc": "Enable bias of the counter in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the counter bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the counter bias in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_DIV_OW",
       "width": 1,
       "offset": 12,
       "desc": "Overwrite of the enable signale of the divider",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the divider enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the divider enable signal"
        }
       ]
      },
      {
       "name": "LO_DIV_OW_EN",
       "width": 1,
       "offset": 13,
       "desc": "Enable divider in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the divider enable in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the divider enable in overwrite mode"
        }
       ]
      },
      {
       "name": "LO_DIV_BUF_OW",
       "width": 1,
       "offset": 14,
       "desc": "Overwrite of the enable signal of the divider buffer",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the divider buffer enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the divider buffer enable signal"
        }
       ]
      },
      {
       "name": "LO_DIV_BUF_OW_EN",
       "width": 1,
       "offset": 15,
       "desc": "Enable buffer of the divider in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the divider buffer in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the divider buffer in overwrite mode"
        }
       ]
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_TEST0",
     "custom": ""
    },
    {
     "name": "VCO_TEST1",
     "bitwidth": 16,
     "address": 4177,
     "desc": "VCO test register 1",
     "info": "",
     "reset": [
      {
       "value": 64,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TESTMODE_EN",
       "width": 1,
       "offset": 0,
       "desc": "VCO test mode enable signal",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables test mode"
        },
        {
         "value": 1,
         "desc": "Enables test mode"
        }
       ]
      },
      {
       "name": "LO_DIV_TESTMODE_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enables divided clock (1.5 GHz) to DIV_OUT pad for test",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the 1.5 GHz output"
        },
        {
         "value": 1,
         "desc": "Enables the 1.5 GHz output"
        }
       ]
      },
      {
       "name": "MEM_STORE",
       "width": 1,
       "offset": 2,
       "desc": "Store AFC counter values in memory at MEM_SENSE memory address",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the storage of the AFC value in the memory"
        },
        {
         "value": 1,
         "desc": "Enables the storage of the AFC value in the memory"
        }
       ]
      },
      {
       "name": "DAC_CTRL_MODE",
       "width": 1,
       "offset": 3,
       "desc": "Control timing of Vtune DAC",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Deactivates the DAC during active mode"
        },
        {
         "value": 1,
         "desc": "Keeps the DAC active during active mode"
        }
       ]
      },
      {
       "name": "VCO_DIV_DIG_EN",
       "width": 3,
       "offset": 4,
       "desc": "Debug multiplexer for VCO divider on TRIG1 pin",
       "info": "<html >\\n    <body><div>Note: overwrite of TRIG1 pin with priority as this is a clock signal</div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Deactivate"
        },
        {
         "value": 1,
         "desc": "VCO counter 24 GHz / 16 / 32 = 46.9 MHz"
        },
        {
         "value": 2,
         "desc": "VCO counter 46.9 MHz / 2 = 23.4 MHz"
        },
        {
         "value": 3,
         "desc": "VCO counter 46.9 MHz / 4 = 11.7 MHz"
        },
        {
         "value": 4,
         "desc": "VCO counter 46.9 MHz / 8 = 5.9 MHz"
        },
        {
         "value": 5,
         "desc": "VCO counter 46.9 MHz / 2 = 2.9 MHz"
        },
        {
         "value": 6,
         "desc": "VCO counter 46.9 MHz / 2 = 1.46 MHz"
        },
        {
         "value": 7,
         "desc": "VCO counter 46.9 MHz / 2 = 732 kHz"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 8,
       "desc": "Number of external input trigger used for the triggering of counting",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Input trigger 0"
        },
        {
         "value": 1,
         "desc": "Input trigger 1"
        },
        {
         "value": 2,
         "desc": "Input trigger 2"
        },
        {
         "value": 3,
         "desc": "Input trigger 3"
        },
        {
         "value": 4,
         "desc": "Input trigger 4"
        },
        {
         "value": 5,
         "desc": "Input trigger 5"
        },
        {
         "value": 6,
         "desc": "Input trigger 6"
        },
        {
         "value": 7,
         "desc": "Input trigger 7"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "VCO",
     "concat_name": "VCO_VCO_TEST1",
     "custom": ""
    },
    {
     "name": "ADC_GLOB_CONF",
     "bitwidth": 16,
     "address": 6144,
     "desc": "ADC global configuration register",
     "info": "<html >\\n    <body><div>This register is used to configure the ADCs.</div></body>\\n</html>",
     "reset": [
      {
       "value": 4096,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RSVD",
       "width": 10,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "BG_CLK_DIV",
       "width": 1,
       "offset": 10,
       "desc": "ADC bandgap clock divider",
       "info": "<html >\\n    <body><div><p>Note: Bandgap chopping clock should not be smaller than 15 MHz.</p></div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "System clock divided by 4"
        },
        {
         "value": 1,
         "desc": "System clock divided by 2"
        }
       ]
      },
      {
       "name": "OW_CALIB",
       "width": 1,
       "offset": 11,
       "desc": "Overwrite calibration of ADC",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Calibration is triggered by the sequencer"
        },
        {
         "value": 1,
         "desc": "Calibration is triggered for each boot-up of the ADC (for each sample)"
        }
       ]
      },
      {
       "name": "BG_TC_TRIM",
       "width": 3,
       "offset": 12,
       "desc": "Temperature coefficient trimming for the ADC bandgap voltage",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "1.206 V"
        },
        {
         "value": 1,
         "desc": "1.202 V"
        },
        {
         "value": 2,
         "desc": "1.198 V"
        },
        {
         "value": 3,
         "desc": "1.194 V"
        },
        {
         "value": 4,
         "desc": "1.222 V"
        },
        {
         "value": 5,
         "desc": "1.218 V"
        },
        {
         "value": 6,
         "desc": "1.214 V"
        },
        {
         "value": 7,
         "desc": "1.210 V"
        }
       ]
      },
      {
       "name": "BG_CHOP_EN",
       "width": 1,
       "offset": 15,
       "desc": "Enable bandgap chopping",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables bandgap chopping"
        },
        {
         "value": 1,
         "desc": "Enables bandgap chopping"
        }
       ]
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_GLOB_CONF",
     "custom": ""
    },
    {
     "name": "ADC_CONF",
     "bitwidth": 16,
     "address": 6145,
     "desc": "ADC configuration register",
     "info": "<html >\\n    <body><div>The bits in this register are used to configure the ADCs.</div></body>\\n</html>",
     "reset": [
      {
       "value": 23625,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "IQ_ADC_OVERS_CFG",
       "width": 2,
       "offset": 0,
       "desc": "ADC oversampling configuration for IQ-samples",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No oversampling (standard 11-bits conversion)"
        },
        {
         "value": 1,
         "desc": "Oversampling x2"
        },
        {
         "value": 2,
         "desc": "Oversampling x4"
        },
        {
         "value": 3,
         "desc": "Oversampling x8"
        }
       ]
      },
      {
       "name": "IQ_ADC_TRACK_CFG",
       "width": 2,
       "offset": 2,
       "desc": "ADC tracking conversion configuration bits for IQ-samples",
       "info": "<html >\\n    <body><div>Note: Subconversions are executed and averaged.</div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No subconversion"
        },
        {
         "value": 1,
         "desc": "1 subconversion"
        },
        {
         "value": 2,
         "desc": "3 subconversions"
        },
        {
         "value": 3,
         "desc": "7 subconversions"
        }
       ]
      },
      {
       "name": "IQ_ADC_STC",
       "width": 2,
       "offset": 4,
       "desc": "ADC sampling time setting for IQ-samples",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "4 clock cycles"
        },
        {
         "value": 1,
         "desc": "8 clock cycles"
        },
        {
         "value": 2,
         "desc": "16 clock cycles"
        },
        {
         "value": 3,
         "desc": "32 clock cycles"
        }
       ]
      },
      {
       "name": "IQ_ADC_MSB_CTRL",
       "width": 1,
       "offset": 6,
       "desc": "MSB decision time selection during calibration and conversion for IQ-samples",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Single MSB detection time"
        },
        {
         "value": 1,
         "desc": "Double MSB detection time"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "SENSE_ADC_OVERS_CFG",
       "width": 2,
       "offset": 8,
       "desc": "ADC oversampling configuration for sensor samples",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No oversampling (standard 11-bits conversion)"
        },
        {
         "value": 1,
         "desc": "Oversampling x2"
        },
        {
         "value": 2,
         "desc": "Oversampling x4"
        },
        {
         "value": 3,
         "desc": "Oversampling x8"
        }
       ]
      },
      {
       "name": "SENSE_ADC_TRACK_CFG",
       "width": 2,
       "offset": 10,
       "desc": "ADC tracking conversion configuration bits for sensor samples",
       "info": "<html >\\n    <body><div>Note: Subconversions are executed and averaged.</div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No subconversion"
        },
        {
         "value": 1,
         "desc": "1 subconversion"
        },
        {
         "value": 2,
         "desc": "3 subconversions"
        },
        {
         "value": 3,
         "desc": "7 subconversions"
        }
       ]
      },
      {
       "name": "SENSE_ADC_STC",
       "width": 2,
       "offset": 12,
       "desc": "ADC sampling time setting for sensor samples",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "4 clock cycles"
        },
        {
         "value": 1,
         "desc": "8 clock cycles"
        },
        {
         "value": 2,
         "desc": "16 clock cycles"
        },
        {
         "value": 3,
         "desc": "32 clock cycles"
        }
       ]
      },
      {
       "name": "SENSE_ADC_MSB_CTRL",
       "width": 1,
       "offset": 14,
       "desc": "MSB decision time selection during calibration and conversion for sensor samples",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Single MSB detection time"
        },
        {
         "value": 1,
         "desc": "Double MSB detection time"
        }
       ]
      },
      {
       "name": "ADC_TRIG",
       "width": 1,
       "offset": 15,
       "desc": "Trigger for manual ADC conversion",
       "info": "\\\"<html >\\n    <body><div>SW trigger for a single ADC conversion. Writing a '1' will trigger the conversion. Note: ADC needs to be enabled first by TRIG_MAP/DFT_TRIG_EN.</div></body>\\n</html>\\\"",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No effect"
        },
        {
         "value": 1,
         "desc": "Executes a single ADC conversion and clears this bit"
        }
       ]
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_CONF",
     "custom": ""
    },
    {
     "name": "ADC_T_SAMPLE",
     "bitwidth": 16,
     "address": 6146,
     "desc": "Sample delay register",
     "info": "",
     "reset": [
      {
       "value": 20,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 10,
       "offset": 0,
       "desc": "Delay of ADC start of conversion after the HF is switched off in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_T_SAMPLE",
     "custom": ""
    },
    {
     "name": "ADC_T_SENSOR",
     "bitwidth": 16,
     "address": 6147,
     "desc": "Sensor delay register",
     "info": "",
     "reset": [
      {
       "value": 164,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 4,
       "offset": 0,
       "desc": "Exponent of the sensor delay",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 12,
       "offset": 4,
       "desc": "Prefactor of the sensor delay",
       "info": "<html >\\n    <body><div>Sensor delay in system clock cycles: MUL * 2<sup>EXP</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_T_SENSOR",
     "custom": ""
    },
    {
     "name": "ADC_SENSE_CONF",
     "bitwidth": 16,
     "address": 6148,
     "desc": "Sensor configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "CONV1_SEL",
       "width": 3,
       "offset": 0,
       "desc": "Selection of sensor for conversion 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No sensor"
        },
        {
         "value": 1,
         "desc": "Power detector TX1"
        },
        {
         "value": 2,
         "desc": "Power detector TX2"
        },
        {
         "value": 3,
         "desc": "Power detector RX1"
        },
        {
         "value": 4,
         "desc": "Power detector RX2"
        },
        {
         "value": 5,
         "desc": "Temperature sensor"
        },
        {
         "value": 6,
         "desc": "7/15 * VDD_VCO"
        },
        {
         "value": 7,
         "desc": "ADC reference"
        }
       ]
      },
      {
       "name": "RSVD_3",
       "width": 1,
       "offset": 3,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "CONV2_SEL",
       "width": 3,
       "offset": 4,
       "desc": "Selection of sensor for conversion 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No sensor"
        },
        {
         "value": 1,
         "desc": "Power detector TX1"
        },
        {
         "value": 2,
         "desc": "Power detector TX2"
        },
        {
         "value": 3,
         "desc": "Power detector RX1"
        },
        {
         "value": 4,
         "desc": "Power detector RX2"
        },
        {
         "value": 5,
         "desc": "Temperature sensor"
        },
        {
         "value": 6,
         "desc": "7/15 * VDD_VCO"
        },
        {
         "value": 7,
         "desc": "ADC reference"
        }
       ]
      },
      {
       "name": "RSVD_7",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "CONV3_SEL",
       "width": 3,
       "offset": 8,
       "desc": "Selection of sensor for conversion 3",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No sensor"
        },
        {
         "value": 1,
         "desc": "Power detector TX1"
        },
        {
         "value": 2,
         "desc": "Power detector TX2"
        },
        {
         "value": 3,
         "desc": "Power detector RX1"
        },
        {
         "value": 4,
         "desc": "Power detector RX2"
        },
        {
         "value": 5,
         "desc": "Temperature sensor"
        },
        {
         "value": 6,
         "desc": "7/15 * VDD_VCO"
        },
        {
         "value": 7,
         "desc": "ADC reference"
        }
       ]
      },
      {
       "name": "RSVD_15_11",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_SENSE_CONF",
     "custom": ""
    },
    {
     "name": "ADC_ENV_CHK_S1_REF",
     "bitwidth": 16,
     "address": 6160,
     "desc": "Environmental check sensor 1 reference register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "S1_VAL",
       "width": 12,
       "offset": 0,
       "desc": "Value of sensor 1 reference measurement of AFC",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_ENV_CHK_S1_REF",
     "custom": ""
    },
    {
     "name": "ADC_ENV_CHK_S2_REF",
     "bitwidth": 16,
     "address": 6161,
     "desc": "Environmental check sensor 2 reference register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "S2_VAL",
       "width": 12,
       "offset": 0,
       "desc": "Value of sensor 2 reference measurement of AFC",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_ENV_CHK_S2_REF",
     "custom": ""
    },
    {
     "name": "ADC_ENV_CHK_S1_DRIFT",
     "bitwidth": 16,
     "address": 6162,
     "desc": "Environmental check sensor 1 drift register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "S1_DRIFT",
       "width": 10,
       "offset": 0,
       "desc": "Maximum drift of sensor 1 before an alarm is raised and the sequencer is stopped",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_ENV_CHK_S1_DRIFT",
     "custom": ""
    },
    {
     "name": "ADC_ENV_CHK_S2_DRIFT",
     "bitwidth": 16,
     "address": 6163,
     "desc": "Environmental check sensor 2 drift register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "S2_DRIFT",
       "width": 10,
       "offset": 0,
       "desc": "Maximum drift of sensor 2 before an alarm is raised and the sequencer is stopped",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_ENV_CHK_S2_DRIFT",
     "custom": ""
    },
    {
     "name": "ADC_TRIG_MAP",
     "bitwidth": 16,
     "address": 6176,
     "desc": "ADC trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the ADC triggers.",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_SEL",
       "width": 4,
       "offset": 3,
       "desc": "Select signal mapped to the output trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No signal"
        },
        {
         "value": 1,
         "desc": "ADC bandgap chopper enable"
        },
        {
         "value": 2,
         "desc": "ADC bandgap up"
        },
        {
         "value": 3,
         "desc": "ADC MSB control"
        },
        {
         "value": 4,
         "desc": "ADC disable start-up calibration"
        },
        {
         "value": 5,
         "desc": "ADC enable"
        },
        {
         "value": 6,
         "desc": "ADC module ready"
        },
        {
         "value": 7,
         "desc": "ADC start"
        },
        {
         "value": 8,
         "desc": "ADC busy"
        },
        {
         "value": 9,
         "desc": "ADC end of conversion"
        }
       ]
      },
      {
       "name": "RSVD_7",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "DFT_TRIG_MAP",
       "width": 3,
       "offset": 8,
       "desc": "Number of external input trigger used during test to trigger an ADC conversion",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "DFT_TRIG_EN",
       "width": 1,
       "offset": 11,
       "desc": "Enable the ADC for manually triggered conversions.",
       "info": "<html >\\n    <body><div>Enable the ADC.</div><div><br clear=\\\"none\\\"/></div><div>Sequence:</div><div><ul><li>Trigger comes in from SW (CONF\\\\ADC_TRIG) or external pin (DFT_TRIG_MAP)</li><li>Set MUX channels from DFT_ADC_MUX and SENSE_CONF\\\\CONV1_SEL</li><li>Wait 40 clock cycles for MUX channel to settle</li><li>Convert with the ADC settings given by the MUX channel (IQ or sensor). For ADC MUX = 0<sub>D</sub>, sensor settings will be used.</li></ul></div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables external trigger for ADC triggering"
        },
        {
         "value": 1,
         "desc": "Enables external trigger for ADC triggering"
        }
       ]
      },
      {
       "name": "DFT_ADC_MUX",
       "width": 2,
       "offset": 12,
       "desc": "ADC MUX channel for manually triggered ADC conversion",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No channel selected"
        },
        {
         "value": 1,
         "desc": "I-channel"
        },
        {
         "value": 2,
         "desc": "Q-channel"
        },
        {
         "value": 3,
         "desc": "Sensor multiplexer"
        }
       ]
      },
      {
       "name": "RSVD_15_14",
       "width": 2,
       "offset": 14,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_TRIG_MAP",
     "custom": ""
    },
    {
     "name": "ADC_TEST_IN",
     "bitwidth": 16,
     "address": 6192,
     "desc": "ADC test input register",
     "info": "<html >\\n  <body><div>Test register for ADC.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "SEL",
       "width": 3,
       "offset": 0,
       "desc": "Register selection",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Offset calibration value. ADC_TEST_OUT.RESULT[5:0] cal_ram[0]"
        },
        {
         "value": 1,
         "desc": "Linearity calibration value for cap 12. ADC_TEST_OUT.RESULT[5:0] cal_ram[1]"
        },
        {
         "value": 2,
         "desc": "Linearity calibration value for cap 11. ADC_TEST_OUT.RESULT[5:0] cal_ram[2]"
        },
        {
         "value": 3,
         "desc": "Linearity calibration value for cap 10. ADC_TEST_OUT.RESULT[5:0] cal_ram[3]"
        },
        {
         "value": 4,
         "desc": "Last raw result. ADC_TEST_OUT.RESULT[12:0] sar_raw_dig"
        },
        {
         "value": 5,
         "desc": "Last tracking result. ADC_TEST_OUT.RESULT[4:0] Last tracking result"
        },
        {
         "value": 6,
         "desc": "Last result of discharge counter BIST. ADC_TEST_OUT.RESULT[15:0] Result of BIST discharge"
        },
        {
         "value": 7,
         "desc": "Not valid"
        }
       ]
      },
      {
       "name": "CAL_VAL",
       "width": 6,
       "offset": 3,
       "desc": "Calibration test value",
       "info": "<html >\\n    <body><div>Note: 6 bit signed.</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "CAL_WRITE",
       "width": 1,
       "offset": 9,
       "desc": "Calibration test write",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables external trigger for ADC triggering"
        },
        {
         "value": 1,
         "desc": "Enables external trigger for ADC triggering"
        }
       ]
      },
      {
       "name": "CAL_DIS_OFF",
       "width": 1,
       "offset": 10,
       "desc": "Disable offset calibration",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enabled offset calibration"
        },
        {
         "value": 1,
         "desc": "Disabled offset calibration"
        }
       ]
      },
      {
       "name": "CAL_DIS_LIN",
       "width": 1,
       "offset": 11,
       "desc": "Disable linearity calibration",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enabled linearity calibration"
        },
        {
         "value": 1,
         "desc": "Disabled linearity calibration"
        }
       ]
      },
      {
       "name": "SUCAL_RESET_DIS",
       "width": 1,
       "offset": 12,
       "desc": "Disable reseting of calibration values at the beginning of sucal",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enabled reseting"
        },
        {
         "value": 1,
         "desc": "Disabled reseting"
        }
       ]
      },
      {
       "name": "DISCHARGE_CXXX",
       "width": 1,
       "offset": 13,
       "desc": "Enable discharge BIST",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables discharge BIST"
        },
        {
         "value": 1,
         "desc": "Enables discharge BIST"
        }
       ]
      },
      {
       "name": "DISCHARGE_SHIFT",
       "width": 2,
       "offset": 14,
       "desc": "Right shift of the discharge value (ADC_O)",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Shift by 0"
        },
        {
         "value": 1,
         "desc": "Shift by 1"
        },
        {
         "value": 2,
         "desc": "Shift by 2"
        },
        {
         "value": 3,
         "desc": "Shift by 3"
        }
       ]
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_TEST_IN",
     "custom": ""
    },
    {
     "name": "ADC_TEST0_OUT",
     "bitwidth": 16,
     "address": 6193,
     "desc": "ADC test output register",
     "info": "<html>\\n  <body>\\n  </body>\\n</html>\\n",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RESULT",
       "width": 16,
       "offset": 0,
       "desc": "ADC test result",
       "info": "",
       "access": "ro",
       "enums": []
      }
     ],
     "parent": "ADC",
     "concat_name": "ADC_ADC_TEST0_OUT",
     "custom": "volatile=true"
    },
    {
     "name": "TX_T_BIAS",
     "bitwidth": 16,
     "address": 8192,
     "desc": "TX bias delay register",
     "info": "",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "PA bias delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX_T_BIAS",
     "custom": ""
    },
    {
     "name": "TX_T_BUF",
     "bitwidth": 16,
     "address": 8193,
     "desc": "TX buffer delay register",
     "info": "",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Buffer delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX_T_BUF",
     "custom": ""
    },
    {
     "name": "TX_T_RF",
     "bitwidth": 16,
     "address": 8194,
     "desc": "TX RF delay register",
     "info": "",
     "reset": [
      {
       "value": 2,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "RF delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX_T_RF",
     "custom": ""
    },
    {
     "name": "TX_T_RAMP_DN",
     "bitwidth": 16,
     "address": 8195,
     "desc": "TX disable delay register",
     "info": "",
     "reset": [
      {
       "value": 8,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 5,
       "offset": 0,
       "desc": "Ramp down time of TX power in system clock cycles",
       "info": "<html >\\n    <body><p>The ramp down delay must be &gt;=1 clock cycle to avoid harmonics</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 11,
       "offset": 5,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX_T_RAMP_DN",
     "custom": ""
    },
    {
     "name": "TX_TRIG_MAP",
     "bitwidth": 16,
     "address": 8208,
     "desc": "TX trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the TX triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_SEL",
       "width": 4,
       "offset": 3,
       "desc": "Select signal mapped to the output trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "None"
        },
        {
         "value": 1,
         "desc": "LO buffer of TX enable"
        },
        {
         "value": 2,
         "desc": "DAC biasing offset enable"
        },
        {
         "value": 3,
         "desc": "TX1 first stage amplifier biasing enable"
        },
        {
         "value": 4,
         "desc": "TX1 second stage amplifier biasing enable"
        },
        {
         "value": 5,
         "desc": "TX1 DAC enable"
        },
        {
         "value": 6,
         "desc": "TX1 RF output enable"
        },
        {
         "value": 7,
         "desc": "TX1 power detector enable"
        },
        {
         "value": 8,
         "desc": "TX1 power detector high-gain"
        },
        {
         "value": 9,
         "desc": "TX2 first stage amplifier biasing enable"
        },
        {
         "value": 10,
         "desc": "TX2 second stage amplifier biasing enable"
        },
        {
         "value": 11,
         "desc": "TX2 DAC enable"
        },
        {
         "value": 12,
         "desc": "TX2 RF output enable"
        },
        {
         "value": 13,
         "desc": "TX2 power detector enable"
        },
        {
         "value": 14,
         "desc": "TX2 power detector high-gain"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX_TRIG_MAP",
     "custom": ""
    },
    {
     "name": "TX1_PC0_CONF",
     "bitwidth": 16,
     "address": 8448,
     "desc": "TX 1 pulse configuration 0 register",
     "info": "",
     "reset": [
      {
       "value": 103,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 1 in pulse configuration 0",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX1_PC0_CONF",
     "custom": ""
    },
    {
     "name": "TX1_PC1_CONF",
     "bitwidth": 16,
     "address": 8449,
     "desc": "TX 1 pulse configuration 1 register",
     "info": "",
     "reset": [
      {
       "value": 102,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 1 in pulse configuration 1",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX1_PC1_CONF",
     "custom": ""
    },
    {
     "name": "TX1_PC2_CONF",
     "bitwidth": 16,
     "address": 8450,
     "desc": "TX 1 pulse configuration 2 register",
     "info": "",
     "reset": [
      {
       "value": 102,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 1 in pulse configuration 2",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX1_PC2_CONF",
     "custom": ""
    },
    {
     "name": "TX1_PC3_CONF",
     "bitwidth": 16,
     "address": 8451,
     "desc": "TX 1 pulse configuration 3 register",
     "info": "",
     "reset": [
      {
       "value": 102,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 1 in pulse configuration 3",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX1_PC3_CONF",
     "custom": ""
    },
    {
     "name": "TX2_PC0_CONF",
     "bitwidth": 16,
     "address": 8464,
     "desc": "TX 2 pulse configuration 0 register",
     "info": "",
     "reset": [
      {
       "value": 103,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 2 in pulse configuration 0",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX2_PC0_CONF",
     "custom": ""
    },
    {
     "name": "TX2_PC1_CONF",
     "bitwidth": 16,
     "address": 8465,
     "desc": "TX 2 pulse configuration 1 register",
     "info": "",
     "reset": [
      {
       "value": 102,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 2 in pulse configuration 1",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX2_PC1_CONF",
     "custom": ""
    },
    {
     "name": "TX2_PC2_CONF",
     "bitwidth": 16,
     "address": 8466,
     "desc": "TX 2 pulse configuration 2 register",
     "info": "",
     "reset": [
      {
       "value": 102,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 2 in pulse configuration 2",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX2_PC2_CONF",
     "custom": ""
    },
    {
     "name": "TX2_PC3_CONF",
     "bitwidth": 16,
     "address": 8467,
     "desc": "TX 2 pulse configuration 3 register",
     "info": "",
     "reset": [
      {
       "value": 102,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable TX channel 2 in pulse configuration 3",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables TX channel"
        },
        {
         "value": 1,
         "desc": "Enables TX channel"
        }
       ]
      },
      {
       "name": "PWR_DAC",
       "width": 6,
       "offset": 1,
       "desc": "Value of the power-DAC",
       "info": "<html >\\n    <body><div>0<sub>D</sub> ... Minimum value</div><div>63<sub>D</sub> ... Maximum value</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX2_PC3_CONF",
     "custom": ""
    },
    {
     "name": "TX_CONF",
     "bitwidth": 16,
     "address": 8576,
     "desc": "Global TX configuration register",
     "info": "",
     "reset": [
      {
       "value": 115,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RAMP_CTRL",
       "width": 2,
       "offset": 0,
       "desc": "Global TX pulse-shaping configuration",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Fastest setting, which requires highest bandwidth"
        },
        {
         "value": 1,
         "desc": "Fast setting, which requires high bandwidth"
        },
        {
         "value": 2,
         "desc": "Slow setting, which requires low bandwidth"
        },
        {
         "value": 3,
         "desc": "Slowest setting, which requires lowest bandwidth"
        }
       ]
      },
      {
       "name": "DAC_BIAS_OFFSET",
       "width": 2,
       "offset": 2,
       "desc": "Offset current source setting",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "15 ÂµA"
        },
        {
         "value": 1,
         "desc": "30 ÂµA"
        },
        {
         "value": 2,
         "desc": "45 ÂµA"
        },
        {
         "value": 3,
         "desc": "60 ÂµA"
        }
       ]
      },
      {
       "name": "DAC_BIAS_OFFSET_EN",
       "width": 1,
       "offset": 4,
       "desc": "Enable offset current source",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables offset current source"
        },
        {
         "value": 1,
         "desc": "Enables offset current source"
        }
       ]
      },
      {
       "name": "PD1_HG",
       "width": 1,
       "offset": 5,
       "desc": "TX1 power detector high-gain setting",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Low-gain setting"
        },
        {
         "value": 1,
         "desc": "High-gain setting"
        }
       ]
      },
      {
       "name": "PD2_HG",
       "width": 1,
       "offset": 6,
       "desc": "TX2 power detector high-gain setting",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Low-gain setting"
        },
        {
         "value": 1,
         "desc": "High-gain setting"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 9,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX_CONF",
     "custom": ""
    },
    {
     "name": "TX1_TEST",
     "bitwidth": 16,
     "address": 9472,
     "desc": "TX 1 test register",
     "info": "",
     "reset": [
      {
       "value": 16,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "BUF_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the TX buffer enable",
       "info": "<html >\\n    <body><div>Note: Only TX1 should be used</div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the TX buffer signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the TX buffer signal"
        }
       ]
      },
      {
       "name": "BUF_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable the TX buffer in overwrite mode",
       "info": "<html >\\n    <body><div>Note: Only TX1 should be used</div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the LO buffer in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the LO buffer in overwrite mode"
        }
       ]
      },
      {
       "name": "DAC_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the DAC enable of TX channel 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the DAC enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the DAC enable signal"
        }
       ]
      },
      {
       "name": "DAC_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable the DAC of TX channel 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the DAC in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the DAC in overwrite mode"
        }
       ]
      },
      {
       "name": "PD_OW",
       "width": 1,
       "offset": 4,
       "desc": "Overwrite of the power detector enable of TX channel 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the power detector enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the power detector enable signal"
        }
       ]
      },
      {
       "name": "PD_OW_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable the power detector of TX channel 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the power detector in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the power detector in overwrite mode"
        }
       ]
      },
      {
       "name": "VGA1_BIAS_OW",
       "width": 1,
       "offset": 6,
       "desc": "Overwrite of the bias enable of the first stage of the VGA of TX channel 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the VGA1 bias enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the VGA1 bias enable"
        }
       ]
      },
      {
       "name": "VGA1_BIAS_OW_EN",
       "width": 1,
       "offset": 7,
       "desc": "Enable the bias of the first stage of the VGA of TX channel 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the VGA1 bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the VGA1 bias in overwrite mode"
        }
       ]
      },
      {
       "name": "VGA2_BIAS_OW",
       "width": 1,
       "offset": 8,
       "desc": "Overwrite of the bias enable of the second stage of the VGA of TX channel 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the VGA2 bias enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the VGA2 bias enable"
        }
       ]
      },
      {
       "name": "VGA2_BIAS_OW_EN",
       "width": 1,
       "offset": 9,
       "desc": "Enable the bias of the second stage of the VGA of TX channel 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the VGA2 bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the VGA2 bias in overwrite mode"
        }
       ]
      },
      {
       "name": "RF_OW",
       "width": 1,
       "offset": 10,
       "desc": "Overwrite of the RF enable signal of both stages of the VGA of TX channel 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the RF enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the RF enable"
        }
       ]
      },
      {
       "name": "RF_OW_EN",
       "width": 1,
       "offset": 11,
       "desc": "Enable the RF of both stages of the VGA of TX channel 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RF in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the RF in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX1_TEST",
     "custom": ""
    },
    {
     "name": "TX2_TEST",
     "bitwidth": 16,
     "address": 9473,
     "desc": "TX 2 test register",
     "info": "",
     "reset": [
      {
       "value": 16,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "DAC_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the DAC enable of TX channel 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the DAC enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the DAC enable signal"
        }
       ]
      },
      {
       "name": "DAC_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable the DAC of TX channel 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the DAC in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the DAC in overwrite mode"
        }
       ]
      },
      {
       "name": "PD_OW",
       "width": 1,
       "offset": 4,
       "desc": "Overwrite of the power detector enable of TX channel 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the power detector enable signal"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the power detector enable signal"
        }
       ]
      },
      {
       "name": "PD_OW_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable the power detector of TX channel 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the power detector in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the power detector in overwrite mode"
        }
       ]
      },
      {
       "name": "VGA1_BIAS_OW",
       "width": 1,
       "offset": 6,
       "desc": "Overwrite of the bias enable of the first stage of the VGA of TX channel 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the VGA1 bias enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the VGA1 bias enable"
        }
       ]
      },
      {
       "name": "VGA1_BIAS_OW_EN",
       "width": 1,
       "offset": 7,
       "desc": "Enable the bias of the first stage of the VGA of TX channel 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the VGA1 bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the VGA1 bias in overwrite mode"
        }
       ]
      },
      {
       "name": "VGA2_BIAS_OW",
       "width": 1,
       "offset": 8,
       "desc": "Overwrite of the bias enable of the second stage of the VGA of TX channel 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the VGA2 bias enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the VGA2 bias enable"
        }
       ]
      },
      {
       "name": "VGA2_BIAS_OW_EN",
       "width": 1,
       "offset": 9,
       "desc": "Enable the bias of the second stage of the VGA of TX channel 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the VGA2 bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the VGA2 bias in overwrite mode"
        }
       ]
      },
      {
       "name": "RF_OW",
       "width": 1,
       "offset": 10,
       "desc": "Overwrite of the RF enable signal of both stages of the VGA of TX channel 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the RF enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the RF enable"
        }
       ]
      },
      {
       "name": "RF_OW_EN",
       "width": 1,
       "offset": 11,
       "desc": "Enable the RF of both stages of the VGA of TX channel 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RF in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the RF in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "TX",
     "concat_name": "TX_TX2_TEST",
     "custom": ""
    },
    {
     "name": "RX_T_BIAS",
     "bitwidth": 16,
     "address": 10241,
     "desc": "RX biasing delay register",
     "info": "",
     "reset": [
      {
       "value": 4,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "LNA bias delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_T_BIAS",
     "custom": ""
    },
    {
     "name": "RX_T_RF",
     "bitwidth": 16,
     "address": 10242,
     "desc": "RX RF delay register",
     "info": "",
     "reset": [
      {
       "value": 6,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "LNA RF delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_T_RF",
     "custom": ""
    },
    {
     "name": "RX_T_MIX",
     "bitwidth": 16,
     "address": 10243,
     "desc": "RX mixer delay register",
     "info": "",
     "reset": [
      {
       "value": 10,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Mixer delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_T_MIX",
     "custom": ""
    },
    {
     "name": "RX1_PC0_CONF",
     "bitwidth": 16,
     "address": 10256,
     "desc": "RX 1 pulse configuration 0 register",
     "info": "",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 1 in pulse configuration 0",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX1_PC0_CONF",
     "custom": ""
    },
    {
     "name": "RX1_PC1_CONF",
     "bitwidth": 16,
     "address": 10257,
     "desc": "RX 1 pulse configuration 1 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 1 in pulse configuration 1",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX1_PC1_CONF",
     "custom": ""
    },
    {
     "name": "RX1_PC2_CONF",
     "bitwidth": 16,
     "address": 10258,
     "desc": "RX 1 pulse configuration 2 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 1 in pulse configuration 2",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX1_PC2_CONF",
     "custom": ""
    },
    {
     "name": "RX1_PC3_CONF",
     "bitwidth": 16,
     "address": 10259,
     "desc": "RX 1 pulse configuration 3 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 1 in pulse configuration 3",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX1_PC3_CONF",
     "custom": ""
    },
    {
     "name": "RX2_PC0_CONF",
     "bitwidth": 16,
     "address": 10272,
     "desc": "RX 2 pulse configuration 0 register",
     "info": "",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 2 in pulse configuration 0",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX2_PC0_CONF",
     "custom": ""
    },
    {
     "name": "RX2_PC1_CONF",
     "bitwidth": 16,
     "address": 10273,
     "desc": "RX 2 pulse configuration 1 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 2 in pulse configuration 1",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX2_PC1_CONF",
     "custom": ""
    },
    {
     "name": "RX2_PC2_CONF",
     "bitwidth": 16,
     "address": 10274,
     "desc": "RX 2 pulse configuration 2 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 2 in pulse configuration 2",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX2_PC2_CONF",
     "custom": ""
    },
    {
     "name": "RX2_PC3_CONF",
     "bitwidth": 16,
     "address": 10275,
     "desc": "RX 2 pulse configuration 3 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable RX channel 2 in pulse configuration 3",
       "info": "<html ></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX channel"
        },
        {
         "value": 1,
         "desc": "Enables the RX channel"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 15,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX2_PC3_CONF",
     "custom": ""
    },
    {
     "name": "RX_TRIG_MAP",
     "bitwidth": 16,
     "address": 10304,
     "desc": "RX trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger that is used for the RX triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_SEL",
       "width": 3,
       "offset": 3,
       "desc": "Select signal mapped to the output trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "None"
        },
        {
         "value": 1,
         "desc": "RX buffer for RX enable"
        },
        {
         "value": 2,
         "desc": "LNA1 biasing enable"
        },
        {
         "value": 3,
         "desc": "LNA1 RF output enable"
        },
        {
         "value": 4,
         "desc": "LNA2 biasing enable"
        },
        {
         "value": 5,
         "desc": "LNA2 RF output enable"
        },
        {
         "value": 6,
         "desc": "I-channel mixer enable"
        },
        {
         "value": 7,
         "desc": "Q-channel mixer enable"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 10,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_TRIG_MAP",
     "custom": ""
    },
    {
     "name": "RX1_TEST",
     "bitwidth": 16,
     "address": 10368,
     "desc": "RX 1 LNA register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LNA_BIAS_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the bias of the LNA 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the LNA bias"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the LNA bias"
        }
       ]
      },
      {
       "name": "LNA_BIAS_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable the bias of the LNA 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the LNA bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the LNA bias in overwrite mode"
        }
       ]
      },
      {
       "name": "LNA_RF_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the RF signal of the LNA 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the LNA RF"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the LNA RF"
        }
       ]
      },
      {
       "name": "LNA_RF_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable the RF signal of the LNA 1 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the LNA RF in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the LNA RF in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX1_TEST",
     "custom": ""
    },
    {
     "name": "RX2_TEST",
     "bitwidth": 16,
     "address": 10369,
     "desc": "RX 2 LNA register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "LNA_BIAS_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the bias of the LNA 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the LNA bias"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the LNA bias"
        }
       ]
      },
      {
       "name": "LNA_BIAS_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable the bias of the LNA 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the LNA bias in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the LNA bias in overwrite mode"
        }
       ]
      },
      {
       "name": "LNA_RF_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the RF signal of the LNA 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the LNA RF"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the LNA RF"
        }
       ]
      },
      {
       "name": "LNA_RF_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable the RF signal of the LNA 2 in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the LNA RF in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the LNA RF in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX2_TEST",
     "custom": ""
    },
    {
     "name": "RX_MIX_TEST",
     "bitwidth": 16,
     "address": 10376,
     "desc": "RX mixer register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MIXI_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the enable signal of the I-channel mixer",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the I-channel mixer enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the I-channel mixer enable"
        }
       ]
      },
      {
       "name": "MIXI_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable the I-channel mixer in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the I-channel mixer in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the I-channel mixer in overwrite mode"
        }
       ]
      },
      {
       "name": "MIXQ_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the enable signal of the Q-channel mixer",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the Q-channel mixer enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the Q-channel mixer enable"
        }
       ]
      },
      {
       "name": "MIXQ_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable the Q-channel mixer in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the Q-channel mixer in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the Q-channel mixer in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_MIX_TEST",
     "custom": ""
    },
    {
     "name": "RX_TEST",
     "bitwidth": 16,
     "address": 10384,
     "desc": "RX buffer register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "BUF_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the RX buffer enable",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the RX buffer enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the RX buffer enable"
        }
       ]
      },
      {
       "name": "BUF_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable the RX buffer in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the RX buffer in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the RX buffer in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 14,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_TEST",
     "custom": ""
    },
    {
     "name": "RX_BITE0",
     "bitwidth": 16,
     "address": 10385,
     "desc": "RX-BITE 0 register",
     "info": "",
     "reset": [
      {
       "value": 772,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable signal of RX-BITE",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables RX-BITE"
        },
        {
         "value": 1,
         "desc": "Enables RX-BITE"
        }
       ]
      },
      {
       "name": "SWAP",
       "width": 1,
       "offset": 1,
       "desc": "Swap sine and cosine output",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables swapping"
        },
        {
         "value": 1,
         "desc": "Enables swapping"
        }
       ]
      },
      {
       "name": "MODE",
       "width": 1,
       "offset": 2,
       "desc": "Operation mode of the RX-BITE",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Phase change triggered by change of pulse configuration in a sequence"
        },
        {
         "value": 1,
         "desc": "Phase change triggered by clock divider"
        }
       ]
      },
      {
       "name": "STEP",
       "width": 2,
       "offset": 3,
       "desc": "Number of phase steps of a sine/cosine wave",
       "info": "<html >\\n    <head>    </head></html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "32 phase steps"
        },
        {
         "value": 1,
         "desc": "16 phase steps"
        },
        {
         "value": 2,
         "desc": "8 phase steps"
        },
        {
         "value": 3,
         "desc": "4 phase steps"
        }
       ]
      },
      {
       "name": "AMP_DIV",
       "width": 2,
       "offset": 5,
       "desc": "Amplitude of sine/cosine wave",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Full scale"
        },
        {
         "value": 1,
         "desc": "Full scale / 2"
        },
        {
         "value": 2,
         "desc": "Full scale / 4"
        },
        {
         "value": 3,
         "desc": "Full scale / 8"
        }
       ]
      },
      {
       "name": "DFT_MUX_CTRL",
       "width": 4,
       "offset": 7,
       "desc": "RX register that allows multiplexing out certain signals",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Off-state of multiplexer"
        },
        {
         "value": 1,
         "desc": "VREF LP 2x"
        },
        {
         "value": 2,
         "desc": "Bandgap voltage/bandgap voltage after buffer"
        },
        {
         "value": 3,
         "desc": "750 mV common mode voltage/3 ÂµA biasing current (from NMOS)"
        },
        {
         "value": 4,
         "desc": "ABB AAF differential output voltage I-channel"
        },
        {
         "value": 5,
         "desc": "ABB AAF differential output voltage Q-channel"
        },
        {
         "value": 6,
         "desc": "ABB single ended output voltage I- and Q-channel"
        },
        {
         "value": 7,
         "desc": "Biasing voltage of TX1 stage 1/2"
        },
        {
         "value": 8,
         "desc": "Biasing voltage of TX2 stage 1/2"
        },
        {
         "value": 9,
         "desc": "Off-state of multiplexer"
        },
        {
         "value": 10,
         "desc": "Off-state of multiplexer"
        },
        {
         "value": 11,
         "desc": "ABB supply voltage/divided VDD3V3 (LDO input voltage)"
        },
        {
         "value": 12,
         "desc": "ADC input signals"
        },
        {
         "value": 13,
         "desc": "Mixer differential output I-channel"
        },
        {
         "value": 14,
         "desc": "Mixer differential output Q-channel"
        },
        {
         "value": 15,
         "desc": "Off-state of multiplexer"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_BITE0",
     "custom": ""
    },
    {
     "name": "RX_BITE1",
     "bitwidth": 16,
     "address": 10386,
     "desc": "RX-BITE 1 register",
     "info": "",
     "reset": [
      {
       "value": 400,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "CLK_DIV",
       "width": 12,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n <body><div style=\\\"margin-top:0\\\">Integer clock divider:</div><div><ul><li>0<sub>D</sub> ... divide by 1</li><li>1<sub>D</sub> ... divide by 1</li><li>2<sub>D</sub> ... divide by 2</li><li>3<sub>D</sub> ... divide by 3</li><li>4<sub>D</sub> ... divide by 4</li><li>...</li></ul></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RX_BITE1",
     "custom": ""
    },
    {
     "name": "RXABB_T_BIAS",
     "bitwidth": 16,
     "address": 10496,
     "desc": "ABB biasing delay register",
     "info": "",
     "reset": [
      {
       "value": 25,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "ABB bias delay in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RXABB_T_BIAS",
     "custom": ""
    },
    {
     "name": "RXABB_HF_DELAY",
     "bitwidth": 16,
     "address": 10497,
     "desc": "HF delay register",
     "info": "",
     "reset": [
      {
       "value": 14,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "HF delay of ABB settling in system clock cycles",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RXABB_HF_DELAY",
     "custom": ""
    },
    {
     "name": "RXABB_HF_ON_T",
     "bitwidth": 16,
     "address": 10498,
     "desc": "HF on-time register",
     "info": "",
     "reset": [
      {
       "value": 768,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EXP",
       "width": 4,
       "offset": 0,
       "desc": "Exponent of the HF on-time",
       "info": "<html >\\n <body><div>Exponent of the boot-up time of external LDO.</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MUL",
       "width": 12,
       "offset": 4,
       "desc": "Prefactor of the HF on-time",
       "info": "<html >\\n    <body><p>HF on-time (ABB settling time) in system clock cycles: MUL * 2<sup>EXP</sup></p></body>\\n</html>",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RXABB_HF_ON_T",
     "custom": ""
    },
    {
     "name": "RXABB_CONF",
     "bitwidth": 16,
     "address": 10512,
     "desc": "ABB configuration register",
     "info": "",
     "reset": [
      {
       "value": 1,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "BW",
       "width": 2,
       "offset": 0,
       "desc": "Bandwidth setting for the settling time of the analog base band",
       "info": "<html >\\n    <body><div>Note: applied to I- and Q-channel</div></body>\\n</html>",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Settling time about 500 ns"
        },
        {
         "value": 1,
         "desc": "Settling time about 1 Âµs"
        },
        {
         "value": 2,
         "desc": "Settling time about 5 Âµs"
        },
        {
         "value": 3,
         "desc": "Settling time about 10 Âµs"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 14,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RXABB_CONF",
     "custom": ""
    },
    {
     "name": "RXABB_TEST",
     "bitwidth": 16,
     "address": 10528,
     "desc": "ABB 0 test register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "DAC_OW",
       "width": 1,
       "offset": 0,
       "desc": "Overwrite of the enable signal of the offset compensation DAC",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the offset compensation DAC enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the offset compensation DAC enable"
        }
       ]
      },
      {
       "name": "DAC_OW_EN",
       "width": 1,
       "offset": 1,
       "desc": "Enable the offset compensation DAC in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the offset compensation DAC in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the offset compensation DAC in overwrite mode"
        }
       ]
      },
      {
       "name": "PGA_OW",
       "width": 1,
       "offset": 2,
       "desc": "Overwrite of the enable signal of the analog base band amplifier",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the ABB amplifier enable"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the ABB amplifier enable"
        }
       ]
      },
      {
       "name": "PGA_OW_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable the ABB amplifier in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the ABB amplifier in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the ABB amplifier in overwrite mode"
        }
       ]
      },
      {
       "name": "AAF_OW",
       "width": 1,
       "offset": 4,
       "desc": "Overwrite of the enable signal of the (active) anti-aliasing filter",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the AAF"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the AAF"
        }
       ]
      },
      {
       "name": "AAF_OW_EN",
       "width": 1,
       "offset": 5,
       "desc": "Enable the (active) anti-aliasing filter in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the AAF in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the AAF in overwrite mode"
        }
       ]
      },
      {
       "name": "HOLD_OW",
       "width": 1,
       "offset": 6,
       "desc": "Overwrite of the hold signal of the ABB",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the hold signal of the ABB"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the hold signal of the ABB"
        }
       ]
      },
      {
       "name": "HOLD_OW_EN",
       "width": 1,
       "offset": 7,
       "desc": "Signal sample or hold to the ABB in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Sample mode of the ABB in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Hold mode of the ABB in overwrite mode"
        }
       ]
      },
      {
       "name": "STRT_SETTLE_OW",
       "width": 1,
       "offset": 8,
       "desc": "Overwrite of the signal settling in the ABB",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "FSM controlled â€“ no overwrite of the signal settling in the ABB"
        },
        {
         "value": 1,
         "desc": "SW controlled â€“ overwrite of the signal settling in the ABB"
        }
       ]
      },
      {
       "name": "STRT_SETTLE_OW_EN",
       "width": 1,
       "offset": 9,
       "desc": "Enable the signal settling in the ABB in overwrite mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the settling in the ABB in overwrite mode"
        },
        {
         "value": 1,
         "desc": "Enables the settling in the ABB in overwrite mode"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RXABB_TEST",
     "custom": ""
    },
    {
     "name": "RXABB_TRIG_MAP",
     "bitwidth": 16,
     "address": 10536,
     "desc": "ABB trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger used for the RX ABB triggers",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_SEL",
       "width": 3,
       "offset": 3,
       "desc": "Select signal mapped to the output trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "None"
        },
        {
         "value": 1,
         "desc": "DAC enable"
        },
        {
         "value": 2,
         "desc": "PGA enable"
        },
        {
         "value": 3,
         "desc": "AAF enable"
        },
        {
         "value": 4,
         "desc": "Hold signal"
        },
        {
         "value": 5,
         "desc": "Start settling signal"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 10,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "RX",
     "concat_name": "RX_RXABB_TRIG_MAP",
     "custom": ""
    },
    {
     "name": "IMBALANCE_COMP",
     "bitwidth": 16,
     "address": 12288,
     "desc": "Imbalance compensation register",
     "info": "<html >\\n    <body><p style=\\\"margin-top:0\\\">Compensate the imbalance of the two mixers mixers by digitally damping either I or Q</p></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 7,
       "offset": 0,
       "desc": "Multiplication value before dividing by 128",
       "info": "<html >\\n    <head/>\\n    <body><div>Value to multiply I- or Q-channel measurements</div><div>0<sub>D</sub> ... value = 0</div><div>1<sub>D</sub> ... value = 1/128</div><div>...</div><div>127<sub>D</sub> ... value = 127/128</div><div>To avoid introduction of offsett by this amplitude change the ADC-data is treated as signed: out = ((adc - 2048) * val / 128) +2048</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "SEL_IQ",
       "width": 1,
       "offset": 7,
       "desc": "Perform imbalance compensation on I- or Q-component",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Perform the imbalance compensation on I-component"
        },
        {
         "value": 1,
         "desc": "Perform the imbalance compensation on Q-component"
        }
       ]
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable imbalance compensation",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the imbalance compensation"
        },
        {
         "value": 1,
         "desc": "Enables the imbalance compensation"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_IMBALANCE_COMP",
     "custom": ""
    },
    {
     "name": "AGC_TH_MIN",
     "bitwidth": 16,
     "address": 12290,
     "desc": "AGC minimum threshold register",
     "info": "",
     "reset": [
      {
       "value": 512,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 12,
       "offset": 0,
       "desc": "Threshold value for minimum signal",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AGC_TH_MIN",
     "custom": ""
    },
    {
     "name": "AGC_TH_MAX",
     "bitwidth": 16,
     "address": 12291,
     "desc": "AGC maximum threshold register",
     "info": "",
     "reset": [
      {
       "value": 3584,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 12,
       "offset": 0,
       "desc": "Threshold value for maximum signal",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AGC_TH_MAX",
     "custom": ""
    },
    {
     "name": "AGC_TH_DIFF",
     "bitwidth": 16,
     "address": 12292,
     "desc": "AGC difference threshold register",
     "info": "",
     "reset": [
      {
       "value": 1536,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 12,
       "offset": 0,
       "desc": "Threshold value for peak-to-peak value",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 4,
       "offset": 12,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AGC_TH_DIFF",
     "custom": ""
    },
    {
     "name": "PC0_AGC",
     "bitwidth": 16,
     "address": 12293,
     "desc": "AGC configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 15,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable automatic gain control of the ABB of pulse configuration 0",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the automatic gain control"
        },
        {
         "value": 1,
         "desc": "Enables the automatic gain control"
        }
       ]
      },
      {
       "name": "ABB_GAIN",
       "width": 3,
       "offset": 1,
       "desc": "Gain of the ABB of pulse configuration 0 as set by the AGC of the DRDP",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Gain = 3"
        },
        {
         "value": 1,
         "desc": "Gain = 6"
        },
        {
         "value": 2,
         "desc": "Gain = 12"
        },
        {
         "value": 3,
         "desc": "Gain = 24"
        },
        {
         "value": 4,
         "desc": "Gain = 48"
        },
        {
         "value": 5,
         "desc": "Gain = 96"
        },
        {
         "value": 6,
         "desc": "Gain = 192"
        },
        {
         "value": 7,
         "desc": "Gain = 384"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_PC0_AGC",
     "custom": ""
    },
    {
     "name": "PC1_AGC",
     "bitwidth": 16,
     "address": 12294,
     "desc": "AGC configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 15,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable automatic gain control of the ABB of pulse configuration 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the automatic gain control"
        },
        {
         "value": 1,
         "desc": "Enables the automatic gain control"
        }
       ]
      },
      {
       "name": "ABB_GAIN",
       "width": 3,
       "offset": 1,
       "desc": "Gain of the ABB of pulse configuration 1 as set by the AGC of the DRDP",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Gain = 3"
        },
        {
         "value": 1,
         "desc": "Gain = 6"
        },
        {
         "value": 2,
         "desc": "Gain = 12"
        },
        {
         "value": 3,
         "desc": "Gain = 24"
        },
        {
         "value": 4,
         "desc": "Gain = 48"
        },
        {
         "value": 5,
         "desc": "Gain = 96"
        },
        {
         "value": 6,
         "desc": "Gain = 192"
        },
        {
         "value": 7,
         "desc": "Gain = 384"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_PC1_AGC",
     "custom": ""
    },
    {
     "name": "PC2_AGC",
     "bitwidth": 16,
     "address": 12295,
     "desc": "AGC configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 15,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable automatic gain control of the ABB of pulse configuration 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the automatic gain control"
        },
        {
         "value": 1,
         "desc": "Enables the automatic gain control"
        }
       ]
      },
      {
       "name": "ABB_GAIN",
       "width": 3,
       "offset": 1,
       "desc": "Gain of the ABB of pulse configuration 2 as set by the AGC of the DRDP",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Gain = 3"
        },
        {
         "value": 1,
         "desc": "Gain = 6"
        },
        {
         "value": 2,
         "desc": "Gain = 12"
        },
        {
         "value": 3,
         "desc": "Gain = 24"
        },
        {
         "value": 4,
         "desc": "Gain = 48"
        },
        {
         "value": 5,
         "desc": "Gain = 96"
        },
        {
         "value": 6,
         "desc": "Gain = 192"
        },
        {
         "value": 7,
         "desc": "Gain = 384"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_PC2_AGC",
     "custom": ""
    },
    {
     "name": "PC3_AGC",
     "bitwidth": 16,
     "address": 12296,
     "desc": "AGC configuration register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 15,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable automatic gain control of the ABB of pulse configuration 3",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the automatic gain control"
        },
        {
         "value": 1,
         "desc": "Enables the automatic gain control"
        }
       ]
      },
      {
       "name": "ABB_GAIN",
       "width": 3,
       "offset": 1,
       "desc": "Gain of the ABB of pulse configuration 3 as set by the AGC of the DRDP",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Gain = 3"
        },
        {
         "value": 1,
         "desc": "Gain = 6"
        },
        {
         "value": 2,
         "desc": "Gain = 12"
        },
        {
         "value": 3,
         "desc": "Gain = 24"
        },
        {
         "value": 4,
         "desc": "Gain = 48"
        },
        {
         "value": 5,
         "desc": "Gain = 96"
        },
        {
         "value": 6,
         "desc": "Gain = 192"
        },
        {
         "value": 7,
         "desc": "Gain = 384"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_PC3_AGC",
     "custom": ""
    },
    {
     "name": "AOC_CONF",
     "bitwidth": 16,
     "address": 12416,
     "desc": "AOC configuration register",
     "info": "",
     "reset": [
      {
       "value": 170,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MODE0",
       "width": 2,
       "offset": 0,
       "desc": "Automatic offset compensation (AOC) mode selection for pulse configuration 0",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "User offset value is applied (OFFSET)"
        },
        {
         "value": 1,
         "desc": "User offset value is only tracked"
        },
        {
         "value": 2,
         "desc": "User offset value is fully handled by the FSM"
        },
        {
         "value": 3,
         "desc": "RESERVED"
        }
       ]
      },
      {
       "name": "MODE1",
       "width": 2,
       "offset": 2,
       "desc": "Automatic offset compensation (AOC) mode selection for pulse configuration 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "User offset value is applied (OFFSET)"
        },
        {
         "value": 1,
         "desc": "User offset value is only tracked"
        },
        {
         "value": 2,
         "desc": "User offset value is fully handled by the FSM"
        },
        {
         "value": 3,
         "desc": "RESERVED"
        }
       ]
      },
      {
       "name": "MODE2",
       "width": 2,
       "offset": 4,
       "desc": "Automatic offset compensation (AOC) mode selection for pulse configuration 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "User offset value is applied (OFFSET)"
        },
        {
         "value": 1,
         "desc": "User offset value is only tracked"
        },
        {
         "value": 2,
         "desc": "User offset value is fully handled by the FSM"
        },
        {
         "value": 3,
         "desc": "RESERVED"
        }
       ]
      },
      {
       "name": "MODE3",
       "width": 2,
       "offset": 6,
       "desc": "Automatic offset compensation (AOC) mode selection for pulse configuration 3",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "User offset value is applied (OFFSET)"
        },
        {
         "value": 1,
         "desc": "User offset value is only tracked"
        },
        {
         "value": 2,
         "desc": "User offset value is fully handled by the FSM"
        },
        {
         "value": 3,
         "desc": "RESERVED"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 8,
       "offset": 8,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_CONF",
     "custom": ""
    },
    {
     "name": "AOC_PC0_OFFSET_I",
     "bitwidth": 16,
     "address": 12417,
     "desc": "I-mixer offset compensation value PC 0 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC0_OFFSET_I",
     "custom": ""
    },
    {
     "name": "AOC_PC0_OFFSET_Q",
     "bitwidth": 16,
     "address": 12418,
     "desc": "Q-mixer offset compensation value PC 0 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC0_OFFSET_Q",
     "custom": ""
    },
    {
     "name": "AOC_PC1_OFFSET_I",
     "bitwidth": 16,
     "address": 12419,
     "desc": "I-mixer offset compensation value PC 1 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC1_OFFSET_I",
     "custom": ""
    },
    {
     "name": "AOC_PC1_OFFSET_Q",
     "bitwidth": 16,
     "address": 12420,
     "desc": "Q-mixer offset compensation value PC 1 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC1_OFFSET_Q",
     "custom": ""
    },
    {
     "name": "AOC_PC2_OFFSET_I",
     "bitwidth": 16,
     "address": 12421,
     "desc": "I-mixer offset compensation value PC 2 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC2_OFFSET_I",
     "custom": ""
    },
    {
     "name": "AOC_PC2_OFFSET_Q",
     "bitwidth": 16,
     "address": 12422,
     "desc": "Q-mixer offset compensation value PC 2 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC2_OFFSET_Q",
     "custom": ""
    },
    {
     "name": "AOC_PC3_OFFSET_I",
     "bitwidth": 16,
     "address": 12423,
     "desc": "I-mixer offset compensation value PC 3 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC3_OFFSET_I",
     "custom": ""
    },
    {
     "name": "AOC_PC3_OFFSET_Q",
     "bitwidth": 16,
     "address": 12424,
     "desc": "Q-mixer offset compensation value PC 3 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 9,
       "offset": 0,
       "desc": "",
       "info": "<html >\\n    <body><div>Offset compensation value for ABB DAC:</div><div>0<sub>D</sub> ... Minimal value</div><div>255<sub>D</sub> ... Maximal value</div><div>MSB (ninth bit) is a sign bit</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_PC3_OFFSET_Q",
     "custom": ""
    },
    {
     "name": "AOC_TH_0",
     "bitwidth": 16,
     "address": 12432,
     "desc": "AOC threshold 0 register (small step)",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 13,
       "offset": 0,
       "desc": "Automatic offset compensation threshold value 0",
       "info": "<html >\\n    <body><div>Note: this value is the configuration for highest gain setting. The applied value is the configured value left-shifted by (max. gain setting - current gain setting).</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_TH_0",
     "custom": ""
    },
    {
     "name": "AOC_TH_1",
     "bitwidth": 16,
     "address": 12433,
     "desc": "AOC threshold 1 register (large step)",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 13,
       "offset": 0,
       "desc": "Automatic offset compensation threshold value 1",
       "info": "<html >\\n    <body><div>Note: this value is the configuration for highest gain setting. The applied value is the configured value left-shifted by (max. gain setting - current gain setting).</div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_TH_1",
     "custom": ""
    },
    {
     "name": "AOC_STP_0",
     "bitwidth": 16,
     "address": 12434,
     "desc": "AOC step 0 register (small step)",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "DAC_STEP",
       "width": 6,
       "offset": 0,
       "desc": "Step width 0 for the DAC when exceeding the threshold value",
       "info": "<html >\\n    <body><div/></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 10,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_STP_0",
     "custom": ""
    },
    {
     "name": "AOC_STP_1",
     "bitwidth": 16,
     "address": 12435,
     "desc": "AOC step 1 register (large step)",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "DAC_STEP",
       "width": 6,
       "offset": 0,
       "desc": "Step width 1 for the DAC when exceeding the threshold value",
       "info": "<html >\\n    <body><div/></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 10,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_AOC_STP_1",
     "custom": ""
    },
    {
     "name": "FT0_CONF",
     "bitwidth": 16,
     "address": 12544,
     "desc": "Fourier transform configuration register for PC 0",
     "info": "",
     "reset": [
      {
       "value": 140,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable computation of discrete Fourier transform at the end of each frame",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the computation of the discrete Fourier transform"
        },
        {
         "value": 1,
         "desc": "Enables the computation of the discrete Fourier transform"
        }
       ]
      },
      {
       "name": "FT_LEN",
       "width": 2,
       "offset": 1,
       "desc": "Length of the Fourier transformation",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Length = 16"
        },
        {
         "value": 1,
         "desc": "Length = 32"
        },
        {
         "value": 2,
         "desc": "Length = 64"
        },
        {
         "value": 3,
         "desc": "Length = 128"
        }
       ]
      },
      {
       "name": "FT_RES_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enables the storage of the discrete Fourier transformation result in the memory",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Only stores the biggest results and discards the other results of the FT"
        },
        {
         "value": 1,
         "desc": "Stores the results of the FT and its biggest results"
        }
       ]
      },
      {
       "name": "SPL_LEN",
       "width": 2,
       "offset": 4,
       "desc": "Zero-padding factor (ZPF): FT sample input length = FT_LEN / ZPF",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Zero-padding factor = 1"
        },
        {
         "value": 1,
         "desc": "Zero-padding factor = 2"
        },
        {
         "value": 2,
         "desc": "Zero-padding factor = 4"
        },
        {
         "value": 3,
         "desc": "Zero-padding factor = 8"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "MR_EN",
       "width": 1,
       "offset": 7,
       "desc": "Enable mean removal before multiplying with window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the mean removal"
        },
        {
         "value": 1,
         "desc": "Enables the mean removal"
        }
       ]
      },
      {
       "name": "WIN_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable window function before computing the FT",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the window function"
        },
        {
         "value": 1,
         "desc": "Enables the window function"
        }
       ]
      },
      {
       "name": "WIN_SYM",
       "width": 1,
       "offset": 9,
       "desc": "Symmetry of window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Unsymmetrical window function Not supported for FT_128, optional for FT_64, mandatory for FT_32 or FT_16"
        },
        {
         "value": 1,
         "desc": "Symmetrical window function (requires half length). Mandatory for FT_128, optional for FT_64, not supported for FT_32 or FT_16"
        }
       ]
      },
      {
       "name": "WIN_SEL",
       "width": 1,
       "offset": 10,
       "desc": "Select window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Window function 0 (starting at register field WINDOW[0].WINDOW0)"
        },
        {
         "value": 1,
         "desc": "Window function 1 (starting at register field WINDOW[16].WINDOW0) - only if window sizes are small enough to allow a 2nd window definition"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT0_CONF",
     "custom": ""
    },
    {
     "name": "FT1_CONF",
     "bitwidth": 16,
     "address": 12545,
     "desc": "Fourier transform configuration register for PC 1",
     "info": "",
     "reset": [
      {
       "value": 140,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable computation of discrete Fourier transform at the end of each frame",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the computation of the discrete Fourier transform"
        },
        {
         "value": 1,
         "desc": "Enables the computation of the discrete Fourier transform"
        }
       ]
      },
      {
       "name": "FT_LEN",
       "width": 2,
       "offset": 1,
       "desc": "Length of the Fourier transformation",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Length = 16"
        },
        {
         "value": 1,
         "desc": "Length = 32"
        },
        {
         "value": 2,
         "desc": "Length = 64"
        },
        {
         "value": 3,
         "desc": "Length = 128"
        }
       ]
      },
      {
       "name": "FT_RES_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enables the storage of the discrete Fourier transformation result in the memory",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Only stores the biggest results and discards the other results of the FT"
        },
        {
         "value": 1,
         "desc": "Stores the results of the FT and its biggest results"
        }
       ]
      },
      {
       "name": "SPL_LEN",
       "width": 2,
       "offset": 4,
       "desc": "Zero-padding factor (ZPF): FT sample input length = FT_LEN / ZPF",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Zero-padding factor = 1"
        },
        {
         "value": 1,
         "desc": "Zero-padding factor = 2"
        },
        {
         "value": 2,
         "desc": "Zero-padding factor = 4"
        },
        {
         "value": 3,
         "desc": "Zero-padding factor = 8"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "MR_EN",
       "width": 1,
       "offset": 7,
       "desc": "Enable mean removal before multiplying with window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the mean removal"
        },
        {
         "value": 1,
         "desc": "Enables the mean removal"
        }
       ]
      },
      {
       "name": "WIN_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable window function before computing the FT",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the window function"
        },
        {
         "value": 1,
         "desc": "Enables the window function"
        }
       ]
      },
      {
       "name": "WIN_SYM",
       "width": 1,
       "offset": 9,
       "desc": "Symmetry of window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Unsymmetrical window function Not supported for FT_128, optional for FT_64, mandatory for FT_32 or FT_16"
        },
        {
         "value": 1,
         "desc": "Symmetrical window function (requires half length). Mandatory for FT_128, optional for FT_64, not supported for FT_32 or FT_16"
        }
       ]
      },
      {
       "name": "WIN_SEL",
       "width": 1,
       "offset": 10,
       "desc": "Select window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Window function 0 (starting at register field WINDOW[0].WINDOW0)"
        },
        {
         "value": 1,
         "desc": "Window function 1 (starting at register field WINDOW[16].WINDOW0) - only if window sizes are small enough to allow a 2nd window definition"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT1_CONF",
     "custom": ""
    },
    {
     "name": "FT2_CONF",
     "bitwidth": 16,
     "address": 12546,
     "desc": "Fourier transform configuration register for PC 2",
     "info": "",
     "reset": [
      {
       "value": 140,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable computation of discrete Fourier transform at the end of each frame",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the computation of the discrete Fourier transform"
        },
        {
         "value": 1,
         "desc": "Enables the computation of the discrete Fourier transform"
        }
       ]
      },
      {
       "name": "FT_LEN",
       "width": 2,
       "offset": 1,
       "desc": "Length of the Fourier transformation",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Length = 16"
        },
        {
         "value": 1,
         "desc": "Length = 32"
        },
        {
         "value": 2,
         "desc": "Length = 64"
        },
        {
         "value": 3,
         "desc": "Length = 128"
        }
       ]
      },
      {
       "name": "FT_RES_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enables the storage of the discrete Fourier transformation result in the memory",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Only stores the biggest results and discards the other results of the FT"
        },
        {
         "value": 1,
         "desc": "Stores the results of the FT and its biggest results"
        }
       ]
      },
      {
       "name": "SPL_LEN",
       "width": 2,
       "offset": 4,
       "desc": "Zero-padding factor (ZPF): FT sample input length = FT_LEN / ZPF",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Zero-padding factor = 1"
        },
        {
         "value": 1,
         "desc": "Zero-padding factor = 2"
        },
        {
         "value": 2,
         "desc": "Zero-padding factor = 4"
        },
        {
         "value": 3,
         "desc": "Zero-padding factor = 8"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "MR_EN",
       "width": 1,
       "offset": 7,
       "desc": "Enable mean removal before multiplying with window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the mean removal"
        },
        {
         "value": 1,
         "desc": "Enables the mean removal"
        }
       ]
      },
      {
       "name": "WIN_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable window function before computing the FT",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the window function"
        },
        {
         "value": 1,
         "desc": "Enables the window function"
        }
       ]
      },
      {
       "name": "WIN_SYM",
       "width": 1,
       "offset": 9,
       "desc": "Symmetry of window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Unsymmetrical window function Not supported for FT_128, optional for FT_64, mandatory for FT_32 or FT_16"
        },
        {
         "value": 1,
         "desc": "Symmetrical window function (requires half length). Mandatory for FT_128, optional for FT_64, not supported for FT_32 or FT_16"
        }
       ]
      },
      {
       "name": "WIN_SEL",
       "width": 1,
       "offset": 10,
       "desc": "Select window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Window function 0 (starting at register field WINDOW[0].WINDOW0)"
        },
        {
         "value": 1,
         "desc": "Window function 1 (starting at register field WINDOW[16].WINDOW0) - only if window sizes are small enough to allow a 2nd window definition"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT2_CONF",
     "custom": ""
    },
    {
     "name": "FT3_CONF",
     "bitwidth": 16,
     "address": 12547,
     "desc": "Fourier transform configuration register for PC 3",
     "info": "",
     "reset": [
      {
       "value": 140,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "EN",
       "width": 1,
       "offset": 0,
       "desc": "Enable computation of discrete Fourier transform at the end of each frame",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the computation of the discrete Fourier transform"
        },
        {
         "value": 1,
         "desc": "Enables the computation of the discrete Fourier transform"
        }
       ]
      },
      {
       "name": "FT_LEN",
       "width": 2,
       "offset": 1,
       "desc": "Length of the Fourier transformation",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Length = 16"
        },
        {
         "value": 1,
         "desc": "Length = 32"
        },
        {
         "value": 2,
         "desc": "Length = 64"
        },
        {
         "value": 3,
         "desc": "Length = 128"
        }
       ]
      },
      {
       "name": "FT_RES_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enables the storage of the discrete Fourier transformation result in the memory",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Only stores the biggest results and discards the other results of the FT"
        },
        {
         "value": 1,
         "desc": "Stores the results of the FT and its biggest results"
        }
       ]
      },
      {
       "name": "SPL_LEN",
       "width": 2,
       "offset": 4,
       "desc": "Zero-padding factor (ZPF): FT sample input length = FT_LEN / ZPF",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Zero-padding factor = 1"
        },
        {
         "value": 1,
         "desc": "Zero-padding factor = 2"
        },
        {
         "value": 2,
         "desc": "Zero-padding factor = 4"
        },
        {
         "value": 3,
         "desc": "Zero-padding factor = 8"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "MR_EN",
       "width": 1,
       "offset": 7,
       "desc": "Enable mean removal before multiplying with window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the mean removal"
        },
        {
         "value": 1,
         "desc": "Enables the mean removal"
        }
       ]
      },
      {
       "name": "WIN_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable window function before computing the FT",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the window function"
        },
        {
         "value": 1,
         "desc": "Enables the window function"
        }
       ]
      },
      {
       "name": "WIN_SYM",
       "width": 1,
       "offset": 9,
       "desc": "Symmetry of window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Unsymmetrical window function Not supported for FT_128, optional for FT_64, mandatory for FT_32 or FT_16"
        },
        {
         "value": 1,
         "desc": "Symmetrical window function (requires half length). Mandatory for FT_128, optional for FT_64, not supported for FT_32 or FT_16"
        }
       ]
      },
      {
       "name": "WIN_SEL",
       "width": 1,
       "offset": 10,
       "desc": "Select window function",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Window function 0 (starting at register field WINDOW[0].WINDOW0)"
        },
        {
         "value": 1,
         "desc": "Window function 1 (starting at register field WINDOW[16].WINDOW0) - only if window sizes are small enough to allow a 2nd window definition"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT3_CONF",
     "custom": ""
    },
    {
     "name": "FT_TEST",
     "bitwidth": 16,
     "address": 12559,
     "desc": "Register for Fourier transform tests",
     "info": "<html>\\n  <body>\\n  </body>\\n</html>\\n",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MAN_TRIG",
       "width": 1,
       "offset": 0,
       "desc": "Manual trigger for the FT computation and, if configured, coordinate transformation, as well as (adaptive) thresholding",
       "info": "",
       "access": "w",
       "enums": [
        {
         "value": 0,
         "desc": "No action"
        },
        {
         "value": 1,
         "desc": "Manual triggering of computation"
        }
       ]
      },
      {
       "name": "SLOW_CALC",
       "width": 1,
       "offset": 1,
       "desc": "SYS-CLK divider control for calculations",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Bypass SYS_CLK divider during computation"
        },
        {
         "value": 1,
         "desc": "No bypass of SYS_CLK divider during computation"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 14,
       "offset": 2,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT_TEST",
     "custom": ""
    },
    {
     "name": "FT0_EXCLUDE",
     "bitwidth": 16,
     "address": 12560,
     "desc": "FT frequency exclude register 0",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT0_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT1_EXCLUDE",
     "bitwidth": 16,
     "address": 12561,
     "desc": "FT frequency exclude register 1",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT1_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT2_EXCLUDE",
     "bitwidth": 16,
     "address": 12562,
     "desc": "FT frequency exclude register 2",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT2_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT3_EXCLUDE",
     "bitwidth": 16,
     "address": 12563,
     "desc": "FT frequency exclude register 3",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT3_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT4_EXCLUDE",
     "bitwidth": 16,
     "address": 12564,
     "desc": "FT frequency exclude register 4",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT4_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT5_EXCLUDE",
     "bitwidth": 16,
     "address": 12565,
     "desc": "FT frequency exclude register 5",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT5_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT6_EXCLUDE",
     "bitwidth": 16,
     "address": 12566,
     "desc": "FT frequency exclude register 6",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT6_EXCLUDE",
     "custom": ""
    },
    {
     "name": "FT7_EXCLUDE",
     "bitwidth": 16,
     "address": 12567,
     "desc": "FT frequency exclude register 7",
     "info": "",
     "reset": [
      {
       "value": 65535,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "START",
       "width": 8,
       "offset": 0,
       "desc": "Start bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "END",
       "width": 8,
       "offset": 8,
       "desc": "End bin of FT exclude range for target detection",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_FT7_EXCLUDE",
     "custom": ""
    },
    {
     "name": "THRESHOLD0_CONF",
     "bitwidth": 16,
     "address": 12576,
     "desc": "Target configuration register for PC 0",
     "info": "",
     "reset": [
      {
       "value": 257,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MODE",
       "width": 1,
       "offset": 0,
       "desc": "Target detection mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Target detection disabled"
        },
        {
         "value": 1,
         "desc": "Target detection based on manual threshold"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_TARGET",
       "width": 2,
       "offset": 4,
       "desc": "Number of strongest targets to be stored",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strongest 1 target"
        },
        {
         "value": 1,
         "desc": "Strongest 2 targets"
        },
        {
         "value": 2,
         "desc": "Strongest 4 targets"
        },
        {
         "value": 3,
         "desc": "Strongest 8 targets"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "AUTO_SUM_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable automatic calculation of the sum of the strongest targets bins",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables automatic calculation of the sum of the strongest targets bins"
        },
        {
         "value": 1,
         "desc": "Enables automatic calculation of the sum of the strongest targets bins"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD0_CONF",
     "custom": ""
    },
    {
     "name": "THRESHOLD0_MANUAL",
     "bitwidth": 16,
     "address": 12577,
     "desc": "Manual threshold register for PC 0",
     "info": "",
     "reset": [
      {
       "value": 400,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 13,
       "offset": 0,
       "desc": "Threshold value for targets",
       "info": "<html >\\n    <head/>\\n    <body><p style=\\\"margin-top: 0\\\">This threshold value is automatically scaled with the selected gain.</p><p>Moreover the Fourier-calculation values in the memory are missing the LSB of the internally used value. Therefore this threshold must be twice(!) as large as the memory-magnitude to avoid the target-detection trigger.</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD0_MANUAL",
     "custom": ""
    },
    {
     "name": "THRESHOLD0_ADAPTIVE",
     "bitwidth": 16,
     "address": 12578,
     "desc": "Adaptive threshold register for PC 0",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RSVD",
       "width": 8,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_FRM",
       "width": 3,
       "offset": 8,
       "desc": "Exponent of frame averaging number",
       "info": "<html >\\n    <body><div>Number of frames used for averaging of the adaptive threshold: 2<sup>NUM_FRM</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD0_ADAPTIVE",
     "custom": ""
    },
    {
     "name": "THRESHOLD0_RESULT",
     "bitwidth": 16,
     "address": 12579,
     "desc": "Result register for PC 0",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "AUTO_SUM",
       "width": 10,
       "offset": 0,
       "desc": "Sum of frequency bins of the strongest targets within a frame",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD0_RESULT",
     "custom": ""
    },
    {
     "name": "THRESHOLD1_CONF",
     "bitwidth": 16,
     "address": 12580,
     "desc": "Target configuration register for PC 1",
     "info": "",
     "reset": [
      {
       "value": 257,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MODE",
       "width": 1,
       "offset": 0,
       "desc": "Target detection mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Target detection disabled"
        },
        {
         "value": 1,
         "desc": "Target detection based on manual threshold"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_TARGET",
       "width": 2,
       "offset": 4,
       "desc": "Number of strongest targets to be stored",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strongest 1 target"
        },
        {
         "value": 1,
         "desc": "Strongest 2 targets"
        },
        {
         "value": 2,
         "desc": "Strongest 4 targets"
        },
        {
         "value": 3,
         "desc": "Strongest 8 targets"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "AUTO_SUM_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable automatic calculation of the sum of the strongest targets bins",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables automatic calculation of the sum of the strongest targets bins"
        },
        {
         "value": 1,
         "desc": "Enables automatic calculation of the sum of the strongest targets bins"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD1_CONF",
     "custom": ""
    },
    {
     "name": "THRESHOLD1_MANUAL",
     "bitwidth": 16,
     "address": 12581,
     "desc": "Manual threshold register for PC 1",
     "info": "",
     "reset": [
      {
       "value": 400,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 13,
       "offset": 0,
       "desc": "Threshold value for targets",
       "info": "<html >\\n    <head/>\\n    <body><p style=\\\"margin-top: 0\\\">This threshold value is automatically scaled with the selected gain.</p><p>Moreover the Fourier-calculation values in the memory are missing the LSB of the internally used value. Therefore this threshold must be twice(!) as large as the memory-magnitude to avoid the target-detection trigger.</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD1_MANUAL",
     "custom": ""
    },
    {
     "name": "THRESHOLD1_ADAPTIVE",
     "bitwidth": 16,
     "address": 12582,
     "desc": "Adaptive threshold register for PC 1",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RSVD",
       "width": 8,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_FRM",
       "width": 3,
       "offset": 8,
       "desc": "Exponent of frame averaging number",
       "info": "<html >\\n    <body><div>Number of frames used for averaging of the adaptive threshold: 2<sup>NUM_FRM</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD1_ADAPTIVE",
     "custom": ""
    },
    {
     "name": "THRESHOLD1_RESULT",
     "bitwidth": 16,
     "address": 12583,
     "desc": "Result register for PC 1",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "AUTO_SUM",
       "width": 10,
       "offset": 0,
       "desc": "Sum of frequency bins of the strongest targets within a frame",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD1_RESULT",
     "custom": ""
    },
    {
     "name": "THRESHOLD2_CONF",
     "bitwidth": 16,
     "address": 12584,
     "desc": "Target configuration register for PC 2",
     "info": "",
     "reset": [
      {
       "value": 257,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MODE",
       "width": 1,
       "offset": 0,
       "desc": "Target detection mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Target detection disabled"
        },
        {
         "value": 1,
         "desc": "Target detection based on manual threshold"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_TARGET",
       "width": 2,
       "offset": 4,
       "desc": "Number of strongest targets to be stored",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strongest 1 target"
        },
        {
         "value": 1,
         "desc": "Strongest 2 targets"
        },
        {
         "value": 2,
         "desc": "Strongest 4 targets"
        },
        {
         "value": 3,
         "desc": "Strongest 8 targets"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "AUTO_SUM_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable automatic calculation of the sum of the strongest targets bins",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables automatic calculation of the sum of the strongest targets bins"
        },
        {
         "value": 1,
         "desc": "Enables automatic calculation of the sum of the strongest targets bins"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD2_CONF",
     "custom": ""
    },
    {
     "name": "THRESHOLD2_MANUAL",
     "bitwidth": 16,
     "address": 12585,
     "desc": "Manual threshold register for PC 2",
     "info": "",
     "reset": [
      {
       "value": 400,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 13,
       "offset": 0,
       "desc": "Threshold value for targets",
       "info": "<html >\\n    <head/>\\n    <body><p style=\\\"margin-top: 0\\\">This threshold value is automatically scaled with the selected gain.</p><p>Moreover the Fourier-calculation values in the memory are missing the LSB of the internally used value. Therefore this threshold must be twice(!) as large as the memory-magnitude to avoid the target-detection trigger.</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD2_MANUAL",
     "custom": ""
    },
    {
     "name": "THRESHOLD2_ADAPTIVE",
     "bitwidth": 16,
     "address": 12586,
     "desc": "Adaptive threshold register for PC 2",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RSVD",
       "width": 8,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_FRM",
       "width": 3,
       "offset": 8,
       "desc": "Exponent of frame averaging number",
       "info": "<html >\\n    <body><div>Number of frames used for averaging of the adaptive threshold: 2<sup>NUM_FRM</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD2_ADAPTIVE",
     "custom": ""
    },
    {
     "name": "THRESHOLD2_RESULT",
     "bitwidth": 16,
     "address": 12587,
     "desc": "Result register for PC 2",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "AUTO_SUM",
       "width": 10,
       "offset": 0,
       "desc": "Sum of frequency bins of the strongest targets within a frame",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD2_RESULT",
     "custom": ""
    },
    {
     "name": "THRESHOLD3_CONF",
     "bitwidth": 16,
     "address": 12588,
     "desc": "Target configuration register for PC 3",
     "info": "",
     "reset": [
      {
       "value": 257,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "MODE",
       "width": 1,
       "offset": 0,
       "desc": "Target detection mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Target detection disabled"
        },
        {
         "value": 1,
         "desc": "Target detection based on manual threshold"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 1,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_TARGET",
       "width": 2,
       "offset": 4,
       "desc": "Number of strongest targets to be stored",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Strongest 1 target"
        },
        {
         "value": 1,
         "desc": "Strongest 2 targets"
        },
        {
         "value": 2,
         "desc": "Strongest 4 targets"
        },
        {
         "value": 3,
         "desc": "Strongest 8 targets"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 6,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "AUTO_SUM_EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable automatic calculation of the sum of the strongest targets bins",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables automatic calculation of the sum of the strongest targets bins"
        },
        {
         "value": 1,
         "desc": "Enables automatic calculation of the sum of the strongest targets bins"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD3_CONF",
     "custom": ""
    },
    {
     "name": "THRESHOLD3_MANUAL",
     "bitwidth": 16,
     "address": 12589,
     "desc": "Manual threshold register for PC 3",
     "info": "",
     "reset": [
      {
       "value": 400,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "THRESHOLD",
       "width": 13,
       "offset": 0,
       "desc": "Threshold value for targets",
       "info": "<html >\\n    <head/>\\n    <body><p style=\\\"margin-top: 0\\\">This threshold value is automatically scaled with the selected gain.</p><p>Moreover the Fourier-calculation values in the memory are missing the LSB of the internally used value. Therefore this threshold must be twice(!) as large as the memory-magnitude to avoid the target-detection trigger.</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 3,
       "offset": 13,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD3_MANUAL",
     "custom": ""
    },
    {
     "name": "THRESHOLD3_ADAPTIVE",
     "bitwidth": 16,
     "address": 12590,
     "desc": "Adaptive threshold register for PC 3",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RSVD",
       "width": 8,
       "offset": 0,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "NUM_FRM",
       "width": 3,
       "offset": 8,
       "desc": "Exponent of frame averaging number",
       "info": "<html >\\n    <body><div>Number of frames used for averaging of the adaptive threshold: 2<sup>NUM_FRM</sup></div></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 11,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD3_ADAPTIVE",
     "custom": ""
    },
    {
     "name": "THRESHOLD3_RESULT",
     "bitwidth": 16,
     "address": 12591,
     "desc": "Result register for PC 3",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "AUTO_SUM",
       "width": 10,
       "offset": 0,
       "desc": "Sum of frequency bins of the strongest targets within a frame",
       "info": "",
       "access": "ro",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_THRESHOLD3_RESULT",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE0_CONST",
     "bitwidth": 16,
     "address": 12608,
     "desc": "1/f noise constant 0 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE0_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE1_CONST",
     "bitwidth": 16,
     "address": 12609,
     "desc": "1/f noise constant 1 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE1_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE2_CONST",
     "bitwidth": 16,
     "address": 12610,
     "desc": "1/f noise constant 2 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE2_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE3_CONST",
     "bitwidth": 16,
     "address": 12611,
     "desc": "1/f noise constant 3 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE3_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE4_CONST",
     "bitwidth": 16,
     "address": 12612,
     "desc": "1/f noise constant 4 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE4_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE5_CONST",
     "bitwidth": 16,
     "address": 12613,
     "desc": "1/f noise constant 5 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE5_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE6_CONST",
     "bitwidth": 16,
     "address": 12614,
     "desc": "1/f noise constant 6 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE6_CONST",
     "custom": ""
    },
    {
     "name": "DRDP_FNOISE7_CONST",
     "bitwidth": 16,
     "address": 12615,
     "desc": "1/f noise constant 7 register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "VAL",
       "width": 8,
       "offset": 0,
       "desc": "Value for multiplication of frequency bin",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "EN",
       "width": 1,
       "offset": 8,
       "desc": "Enable multiplication of the frequency bin",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables multiplication of the frequency bin"
        },
        {
         "value": 1,
         "desc": "Enables multiplication of the frequency bin"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 7,
       "offset": 9,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_FNOISE7_CONST",
     "custom": ""
    },
    {
     "name": "MEM_RAW",
     "bitwidth": 16,
     "address": 12624,
     "desc": "Memory raw data offset register",
     "info": "<html >\\n    <head/>\\n    <body><div>The first raw data offset register is used for frames with an even frame-number (double-input buffering).</div><div>To disable double input buffering, set equal to MEM_RAW.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 10,
       "offset": 0,
       "desc": "Memory offset for start address of raw data",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_MEM_RAW",
     "custom": ""
    },
    {
     "name": "MEM_RAW2",
     "bitwidth": 16,
     "address": 12625,
     "desc": "Memory raw data offset register 2",
     "info": "<html >\\n    <head/>\\n    <body><div>The second raw data offset register is used for frames with an odd frame-number (double-input buffering).</div><div>To disable double input buffering, set equal to MEM_RAW.</div></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 10,
       "offset": 0,
       "desc": "Memory offset for start address 2 of raw data",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_MEM_RAW2",
     "custom": ""
    },
    {
     "name": "MEM_FT",
     "bitwidth": 16,
     "address": 12626,
     "desc": "Memory FT data offset register",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 256,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 10,
       "offset": 0,
       "desc": "Memory offset for start address of FT data",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_MEM_FT",
     "custom": ""
    },
    {
     "name": "MEM_TRG",
     "bitwidth": 16,
     "address": 12627,
     "desc": "Memory target data offset register",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 512,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 10,
       "offset": 0,
       "desc": "Memory offset for start address of target data",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_MEM_TRG",
     "custom": ""
    },
    {
     "name": "MEM_SENS",
     "bitwidth": 16,
     "address": 12628,
     "desc": "Memory sensor data offset register",
     "info": "<html >\\n    <body><p>This has to have the highest value of all pointers because the sensor data is organized as ring-buffer and wraps around at memory end.</p></body>\\n</html>",
     "reset": [
      {
       "value": 544,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "OFFSET",
       "width": 10,
       "offset": 0,
       "desc": "Memory offset for start address of sensor data",
       "info": "<html >\\n    <body><p>This has to have the highest value of all pointers because the sensor data is organized as ring-buffer and wraps around at memory end.</p></body>\\n</html>",
       "access": "rw",
       "enums": []
      },
      {
       "name": "RSVD",
       "width": 5,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "COMPACT",
       "width": 1,
       "offset": 15,
       "desc": "Compact format enable (only ADC data without sensor-number and frame-number) for faster test",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Standard format"
        },
        {
         "value": 1,
         "desc": "Compact format"
        }
       ]
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_MEM_SENS",
     "custom": ""
    },
    {
     "name": "DRDP_TRIG_MAP_TRG",
     "bitwidth": 16,
     "address": 12672,
     "desc": "Target detection trigger map register",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger used for a detected target",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable target detection trigger",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the target detection trigger"
        },
        {
         "value": 1,
         "desc": "Enables the target detection trigger"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_TRIG_MAP_TRG",
     "custom": ""
    },
    {
     "name": "DRDP_TRIG_MAP_CF",
     "bitwidth": 16,
     "address": 12673,
     "desc": "Computation finished trigger map register",
     "info": "<html >\\n    <head>\\n        <style type=\\\"text/css\\\" >\\n\\t\\n<!--\\n            .style9 {\\n                background-color: #ff00ff;\\n                color: #ffff33\\n            }\\n            .style8 {\\n                background-color: #66ffcc;\\n                color: #990099\\n            }\\n            .style7 {\\n                background-color: #ccffcc;\\n                color: #0066cc\\n            }\\n            .style6 {\\n                background-color: #ffffcc;\\n                color: #009900\\n            }\\n            .style11 {\\n                background-color: #ccffcc;\\n                color: #000066\\n            }\\n            .style5 {\\n                background-color: #99ff99;\\n                color: #cc0033\\n            }\\n            .style10 {\\n                background-color: #00cccc;\\n                color: #99ff99\\n            }\\n            .style4 {\\n                background-color: #ccffff;\\n                color: #cc0033\\n            }\\n            .style3 {\\n                background-color: teal;\\n                color: #0000dd\\n            }\\n            .style2 {\\n                background-color: aqua;\\n                color: #0000cc\\n            }\\n            .style1 {\\n                background-color: silver;\\n                color: blue\\n            }\\n            .style0 {\\n                background-color: #ffffcc;\\n                color: #000099\\n            }-->  </style>\\n    </head>\\n    <body><p style=\\\"margin-top:0\\\">The trigger fires even if computation(FT, ...) is disabled. In this case it will be active shortly after the final pulse of a frame.</p><p style=\\\"margin-top: 0\\\">With all the computation enabled it is delayed accordingly.</p></body>\\n</html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "TRIG_MAP",
       "width": 3,
       "offset": 0,
       "desc": "Number of external output trigger used for a finished computation",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Output trigger 0"
        },
        {
         "value": 1,
         "desc": "Output trigger 1"
        },
        {
         "value": 2,
         "desc": "Output trigger 2"
        },
        {
         "value": 3,
         "desc": "Output trigger 3"
        },
        {
         "value": 4,
         "desc": "Output trigger 4"
        },
        {
         "value": 5,
         "desc": "Output trigger 5"
        },
        {
         "value": 6,
         "desc": "Output trigger 6"
        },
        {
         "value": 7,
         "desc": "Output trigger 7"
        }
       ]
      },
      {
       "name": "TRIG_EN",
       "width": 1,
       "offset": 3,
       "desc": "Enable trigger for computation finished",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Disables the trigger for computation finished"
        },
        {
         "value": 1,
         "desc": "Enables the trigger for computation finished"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 12,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_DRDP_TRIG_MAP_CF",
     "custom": ""
    },
    {
     "name": "INTERF_1",
     "bitwidth": 16,
     "address": 12736,
     "desc": "Interference handling 2",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "RAND_FRAME",
       "width": 4,
       "offset": 0,
       "desc": "Randomize a certain number of bits (5:19) of the frame time",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "ZERO_FRAME",
       "width": 4,
       "offset": 4,
       "desc": "Only with TH_EARLY is high: Clear a certain number of bits (27:13) of the frame time when validating a target detection by additional frames",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "FRAMES_HIST",
       "width": 2,
       "offset": 8,
       "desc": "Number of stored frames in frame history",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "FRAMES_MIN",
       "width": 2,
       "offset": 10,
       "desc": "Number of required target detections in frame history",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "CLEAR_SEQ",
       "width": 1,
       "offset": 12,
       "desc": "Clear frame history on sequence start",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Initialize the target detection history only on reset"
        },
        {
         "value": 1,
         "desc": "Initialize the target detection history when new sequence starts"
        }
       ]
      },
      {
       "name": "EARLY",
       "width": 1,
       "offset": 13,
       "desc": "Start validation frames early (shorten frame time - see ZERO_FRAME)",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Start validation frames at normal frame-time"
        },
        {
         "value": 1,
         "desc": "Start validation frames at shortened frame-time (see ZERO_FRAME)"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 2,
       "offset": 14,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_INTERF_1",
     "custom": ""
    },
    {
     "name": "INTERF_2",
     "bitwidth": 16,
     "address": 12737,
     "desc": "Interference handling 2",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "SAMPLE_CNT",
       "width": 8,
       "offset": 0,
       "desc": "Time domain sample count threshold",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "MR_TYPE",
       "width": 2,
       "offset": 8,
       "desc": "Type of mean removal",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Average of the whole frame (for frame length is some power of 2)"
        },
        {
         "value": 1,
         "desc": "Median of the first 3 samples"
        },
        {
         "value": 2,
         "desc": "Median of the first 5 samples"
        },
        {
         "value": 3,
         "desc": "RESERVED"
        }
       ]
      },
      {
       "name": "FD_TD",
       "width": 1,
       "offset": 10,
       "desc": "Select frequency or time domain for detector",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Use Fourier transform results for thresholding"
        },
        {
         "value": 1,
         "desc": "Bypass Fourier transform and use time domain data for thresholding"
        }
       ]
      },
      {
       "name": "LEN_SEL",
       "width": 1,
       "offset": 11,
       "desc": "Define how to evaluate the frame length",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Use Fourier transform configuration"
        },
        {
         "value": 1,
         "desc": "Use sequencer configuration"
        }
       ]
      },
      {
       "name": "DET",
       "width": 2,
       "offset": 12,
       "desc": "Define how to evaluate the frame length",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Use for detection: Highest peak"
        },
        {
         "value": 1,
         "desc": "Use for detection: Number of strong samples > SAMPLE_CNT"
        },
        {
         "value": 2,
         "desc": "Use for detection: Peak to peak"
        },
        {
         "value": 3,
         "desc": "RESERVED"
        }
       ]
      },
      {
       "name": "ZCI_HIST",
       "width": 2,
       "offset": 14,
       "desc": "Define how many previous frames are taken into account for ZCI",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_INTERF_2",
     "custom": ""
    },
    {
     "name": "INTERF_3",
     "bitwidth": 16,
     "address": 12738,
     "desc": "Interference handling 3",
     "info": "<html ></html>",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ZCI_TH",
       "width": 8,
       "offset": 0,
       "desc": "Zero Crossing Index threshold",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "ZCI_INIT",
       "width": 7,
       "offset": 8,
       "desc": "Value to initialize ZCI history",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "ZCI_EN",
       "width": 1,
       "offset": 15,
       "desc": "Zero Crossing Index detector enable",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "DISABLE"
        },
        {
         "value": 1,
         "desc": "ENABLE"
        }
       ]
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_INTERF_3",
     "custom": ""
    },
    {
     "name": "WINDOW0",
     "bitwidth": 16,
     "address": 12800,
     "desc": "Window register 0",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW0",
     "custom": ""
    },
    {
     "name": "WINDOW1",
     "bitwidth": 16,
     "address": 12801,
     "desc": "Window register 1",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW1",
     "custom": ""
    },
    {
     "name": "WINDOW2",
     "bitwidth": 16,
     "address": 12802,
     "desc": "Window register 2",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW2",
     "custom": ""
    },
    {
     "name": "WINDOW3",
     "bitwidth": 16,
     "address": 12803,
     "desc": "Window register 3",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW3",
     "custom": ""
    },
    {
     "name": "WINDOW4",
     "bitwidth": 16,
     "address": 12804,
     "desc": "Window register 4",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW4",
     "custom": ""
    },
    {
     "name": "WINDOW5",
     "bitwidth": 16,
     "address": 12805,
     "desc": "Window register 5",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW5",
     "custom": ""
    },
    {
     "name": "WINDOW6",
     "bitwidth": 16,
     "address": 12806,
     "desc": "Window register 6",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW6",
     "custom": ""
    },
    {
     "name": "WINDOW7",
     "bitwidth": 16,
     "address": 12807,
     "desc": "Window register 7",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW7",
     "custom": ""
    },
    {
     "name": "WINDOW8",
     "bitwidth": 16,
     "address": 12808,
     "desc": "Window register 8",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW8",
     "custom": ""
    },
    {
     "name": "WINDOW9",
     "bitwidth": 16,
     "address": 12809,
     "desc": "Window register 9",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW9",
     "custom": ""
    },
    {
     "name": "WINDOW10",
     "bitwidth": 16,
     "address": 12810,
     "desc": "Window register 10",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW10",
     "custom": ""
    },
    {
     "name": "WINDOW11",
     "bitwidth": 16,
     "address": 12811,
     "desc": "Window register 11",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW11",
     "custom": ""
    },
    {
     "name": "WINDOW12",
     "bitwidth": 16,
     "address": 12812,
     "desc": "Window register 12",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW12",
     "custom": ""
    },
    {
     "name": "WINDOW13",
     "bitwidth": 16,
     "address": 12813,
     "desc": "Window register 13",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW13",
     "custom": ""
    },
    {
     "name": "WINDOW14",
     "bitwidth": 16,
     "address": 12814,
     "desc": "Window register 14",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW14",
     "custom": ""
    },
    {
     "name": "WINDOW15",
     "bitwidth": 16,
     "address": 12815,
     "desc": "Window register 15",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW15",
     "custom": ""
    },
    {
     "name": "WINDOW16",
     "bitwidth": 16,
     "address": 12816,
     "desc": "Window register 16",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW16",
     "custom": ""
    },
    {
     "name": "WINDOW17",
     "bitwidth": 16,
     "address": 12817,
     "desc": "Window register 17",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW17",
     "custom": ""
    },
    {
     "name": "WINDOW18",
     "bitwidth": 16,
     "address": 12818,
     "desc": "Window register 18",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW18",
     "custom": ""
    },
    {
     "name": "WINDOW19",
     "bitwidth": 16,
     "address": 12819,
     "desc": "Window register 19",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW19",
     "custom": ""
    },
    {
     "name": "WINDOW20",
     "bitwidth": 16,
     "address": 12820,
     "desc": "Window register 20",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW20",
     "custom": ""
    },
    {
     "name": "WINDOW21",
     "bitwidth": 16,
     "address": 12821,
     "desc": "Window register 21",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW21",
     "custom": ""
    },
    {
     "name": "WINDOW22",
     "bitwidth": 16,
     "address": 12822,
     "desc": "Window register 22",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW22",
     "custom": ""
    },
    {
     "name": "WINDOW23",
     "bitwidth": 16,
     "address": 12823,
     "desc": "Window register 23",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW23",
     "custom": ""
    },
    {
     "name": "WINDOW24",
     "bitwidth": 16,
     "address": 12824,
     "desc": "Window register 24",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW24",
     "custom": ""
    },
    {
     "name": "WINDOW25",
     "bitwidth": 16,
     "address": 12825,
     "desc": "Window register 25",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW25",
     "custom": ""
    },
    {
     "name": "WINDOW26",
     "bitwidth": 16,
     "address": 12826,
     "desc": "Window register 26",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW26",
     "custom": ""
    },
    {
     "name": "WINDOW27",
     "bitwidth": 16,
     "address": 12827,
     "desc": "Window register 27",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW27",
     "custom": ""
    },
    {
     "name": "WINDOW28",
     "bitwidth": 16,
     "address": 12828,
     "desc": "Window register 28",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW28",
     "custom": ""
    },
    {
     "name": "WINDOW29",
     "bitwidth": 16,
     "address": 12829,
     "desc": "Window register 29",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW29",
     "custom": ""
    },
    {
     "name": "WINDOW30",
     "bitwidth": 16,
     "address": 12830,
     "desc": "Window register 30",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW30",
     "custom": ""
    },
    {
     "name": "WINDOW31",
     "bitwidth": 16,
     "address": 12831,
     "desc": "Window register 31",
     "info": "",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "WIN_LOW",
       "width": 8,
       "offset": 0,
       "desc": "Window function coefficient 2*n+0",
       "info": "",
       "access": "rw",
       "enums": []
      },
      {
       "name": "WIN_HIGH",
       "width": 8,
       "offset": 8,
       "desc": "Window function coefficient 2*n+1",
       "info": "",
       "access": "rw",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_WINDOW31",
     "custom": ""
    },
    {
     "name": "MBIST",
     "bitwidth": 16,
     "address": 13056,
     "desc": "Memory BIST register",
     "info": "<html>\\n  <body>\\n  </body>\\n</html>\\n",
     "reset": [
      {
       "value": 0,
       "mask": 65535,
       "name": "system_reset_n"
      }
     ],
     "bslices": [
      {
       "name": "ALG0",
       "width": 1,
       "offset": 0,
       "desc": "Enable MBIST algorithm 0",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enables the MBIST algorithm 0"
        },
        {
         "value": 1,
         "desc": "Disables the MBIST algorithm 0"
        }
       ]
      },
      {
       "name": "ALG1",
       "width": 1,
       "offset": 1,
       "desc": "Enable MBIST algorithm 1",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enables the MBIST algorithm 1"
        },
        {
         "value": 1,
         "desc": "Disables the MBIST algorithm 1"
        }
       ]
      },
      {
       "name": "ALG2",
       "width": 1,
       "offset": 2,
       "desc": "Enable MBIST algorithm 2",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enables the MBIST algorithm 2"
        },
        {
         "value": 1,
         "desc": "Disables the MBIST algorithm 2"
        }
       ]
      },
      {
       "name": "ALG3",
       "width": 1,
       "offset": 3,
       "desc": "Enable MBIST algorithm 3",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enables the MBIST algorithm 3"
        },
        {
         "value": 1,
         "desc": "Disables the MBIST algorithm 3"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 4,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "DBG",
       "width": 1,
       "offset": 5,
       "desc": "Enable MBIST diagnostic mode",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "Enables the MBIST diagnostic mode"
        },
        {
         "value": 1,
         "desc": "Disable the MBIST diagnostic mode"
        }
       ]
      },
      {
       "name": "CTRL",
       "width": 1,
       "offset": 6,
       "desc": "Control signal to start the MBIST test",
       "info": "",
       "access": "rw",
       "enums": [
        {
         "value": 0,
         "desc": "No action"
        },
        {
         "value": 1,
         "desc": "Starts MBIST"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 1,
       "offset": 7,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      },
      {
       "name": "FAIL",
       "width": 1,
       "offset": 8,
       "desc": "MBIST fail bit",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "No fail"
        },
        {
         "value": 1,
         "desc": "Fail"
        }
       ]
      },
      {
       "name": "DONE",
       "width": 1,
       "offset": 9,
       "desc": "MBIST done bit",
       "info": "",
       "access": "ro",
       "enums": [
        {
         "value": 0,
         "desc": "Running"
        },
        {
         "value": 1,
         "desc": "Done"
        }
       ]
      },
      {
       "name": "RSVD",
       "width": 6,
       "offset": 10,
       "desc": "",
       "info": "",
       "access": "?",
       "enums": []
      }
     ],
     "parent": "DRDP",
     "concat_name": "DRDP_MBIST",
     "custom": ""
    }
   ],
   "memory": [
    {
     "name": "MEM",
     "bitwidth": 16,
     "address": 14336,
     "size": 1280,
     "desc": "Memory of the MMIC",
     "info": "",
     "reset": [],
     "access": "rw",
     "parent": "DRDP",
     "concat_name": "DRDP_MEM",
     "custom": ""
    }
   ]
  }
 ]
}
